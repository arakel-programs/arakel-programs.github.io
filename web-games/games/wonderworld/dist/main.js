/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/builderManager.js":
/*!*******************************!*\
  !*** ./src/builderManager.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * Create buildings\r\n */\r\nclass BuilderManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n\r\n        this.buildingMap = new Map([\r\n            [\"grave\", new BuildingWithShowElement(\r\n                new Building(10, 10, [[this.configManager.grave, this.configManager.corpseStorage], [1, 1]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.buildFuneralFlag, [this.pageManager.emptyRowBeforeJobFuneral, this.pageManager.jobFuneralRow, this.pageManager.inGravesRow])],\r\n            [\"graveyard\", new Building(1e3, 1e3, [[this.configManager.graveyard, this.configManager.corpseStorage], [1, 75]], this.configManager, this.eventManager)],\r\n            [\"scroll\", new Building(0, 10, [[this.configManager.scroll, this.configManager.knowledgeStorage], [1, +this.configManager.knowledgeInScroll]],\r\n                this.configManager, this.eventManager)],\r\n            [\"granary\", new Building(50, 50, [[this.configManager.granary, this.configManager.foodStorage], [1, +this.configManager.resourcesInStorage]], this.configManager,\r\n                this.eventManager)],\r\n            [\"pit\", new Building(50, 50, [[this.configManager.pit, this.configManager.woodStorage, this.configManager.stoneStorage], [1, +this.configManager.resourcesInStorage,\r\n                +this.configManager.resourcesInStorage]], this.configManager, this.eventManager)],\r\n            [\"tent\", new Building(20, 0, [[this.configManager.tent, this.configManager.populationStorage], [1, this.configManager.spaceInTent]], this.configManager, this.eventManager)],\r\n            [\"hut\", new Building(50, 20, [[this.configManager.hut, this.configManager.populationStorage], [1, this.configManager.spaceInHut]], this.configManager, this.eventManager)],\r\n            [\"duplex\", new Building(3e2, 3e2, [[this.configManager.duplex, this.configManager.populationStorage], [1, this.configManager.spaceInDuplex]], this.configManager, this.eventManager)],\r\n            [\"campfire\", new Building(30, 10, [[this.configManager.campfire, this.configManager.scientistStorage], [1, this.configManager.spaceInCamprire]],\r\n                this.configManager, this.eventManager)],\r\n            [\"dolmen\", new Building(80, 80, [[this.configManager.dolmen, this.configManager.scientistStorage], [1, this.configManager.spaceInDolmen]], this.configManager,\r\n                this.eventManager)],\r\n            [\"parthenon\", new Building(150, 3e2, [[this.configManager.parthenon, this.configManager.scientistStorage], [1, this.configManager.spaceInParthenon]], this.configManager,\r\n                this.eventManager)],\r\n            [\"library\", new BuildingWithShowElement(\r\n                new Building(3e2, 3e2, [[this.configManager.library, this.configManager.writerStorage], [1, this.configManager.spaceInLibrary]], this.configManager,\r\n                    this.eventManager), this.pageManager, this.configManager.writerPresentFlag, [this.pageManager.jobWriterRow]\r\n            )],\r\n            [\"music-club\", new BuildingWithShowElement(\r\n                new Building(225, 225, [[this.configManager.musicClub, this.configManager.djStorage, this.configManager.happyPeopleStorage], [1,\r\n                    this.configManager.spaceForWorkerInClub, this.configManager.spaceForPeopleInClub]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.djPresentFlag, [this.pageManager.emptyRowBeforHappinessRowElement, this.pageManager.happinessRowElement,\r\n                    this.pageManager.emptyRowBeforProductivityRowElement, this.pageManager.productivityRowElement, this.pageManager.emptyRowBeforeJobInClubElement, this.pageManager.jobDjRowElement])],\r\n            [\"yoga-club\", new BuildingWithShowElement(\r\n                new Building(225, 225, [[this.configManager.yogaClub, this.configManager.instructorStorage, this.configManager.healthyPeopleStorage], [1,\r\n                    this.configManager.spaceForWorkerInClub, this.configManager.spaceForPeopleInClub]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.instructorPresentFlag, [this.pageManager.emptyRowBeforHappinessRowElement, this.pageManager.healthRowElement,\r\n                    this.pageManager.emptyRowBeforProductivityRowElement, this.pageManager.productivityRowElement, this.pageManager.emptyRowBeforeJobInClubElement, this.pageManager.jobInstructorRowElement])],\r\n            [\"palace\", new BuildingWithShowElement(\r\n                new Building(25e2, 25e2, [[this.configManager.palace, this.configManager.dolmen, this.configManager.musicClub,\r\n                    this.configManager.yogaClub, this.configManager.scientistStorage, this.configManager.happyPeopleStorage, this.configManager.healthyPeopleStorage, this.configManager.djStorage,\r\n                    this.configManager.instructorStorage], [1, 5, 5, 5, 5 * this.configManager.spaceInDolmen, 5 * this.configManager.spaceForPeopleInClub, 5 * this.configManager.spaceForPeopleInClub,\r\n                    5, 5]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.palacePresentFlag, [])],\r\n            [\"armory\", new BuildingWithShowElement(\r\n                new Building(3e2, 3e2, [[this.configManager.armory, this.configManager.weaponMasterStorage], [1, 1]], this.configManager, this.eventManager),\r\n                this.pageManager, this.configManager.armoryPresentFlag, []\r\n            )],\r\n            [\"barrack\", new BuildingWithShowElement(\r\n                new Building(5e2, 250, [[this.configManager.barrack, this.configManager.warriorStorage], [1, this.configManager.spaceInBarrack]], this.configManager,\r\n                    this.eventManager),\r\n                this.pageManager, this.configManager.barrackPresentFlag, [this.pageManager.jobWarriorRow])]\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Trying to build new building\r\n     * @param buildingType building type\r\n     * @returns true/false depends on whether building is built.\r\n     */\r\n    buildNewBuilding(buildingType) {\r\n        let result = this.buildingMap.get(buildingType).buildBuilding()\r\n        if (!this.configManager.palacePresentFlag && result) {\r\n            this.checkPalaceAchievement(buildingType);\r\n        }\r\n        if (result) {\r\n            this.pageManager.checkOverpopulated();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    checkPalaceAchievement(buildingType) {\r\n        if (!this.configManager.palacePresentFlag && \"palace\" === buildingType) {\r\n            this.eventManager.showAchievementToUser(\"Palace\");\r\n            this.pageManager.buildPalaceButton.blur().prop(\"disabled\", true).tooltip('hide');\r\n            setTimeout(() => {\r\n                $(`#build-palace-last-msg`).text(\r\n                    `\\t${this.configManager.userName}, You are amazing!!! \\nCongratulations! You built a palace for yourself!! \\nAlso you've just killed: ${+this.configManager.corpse\r\n                    + +this.configManager.inGraveQuantity} people. \\n(￣▽￣)ノ Great job!!`\r\n                );\r\n                $(\"#audio-build-palace\")[0].play();\r\n\r\n                $(\"#build-palace-modal\").modal();\r\n            }, 3e2);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Base class for building\r\n */\r\nclass Building {\r\n    constructor(woodPrice, stonePrice, resourceToChangeAr, configManager, eventManager) {\r\n        this.woodPrice = woodPrice;\r\n        this.stonePrice = stonePrice;\r\n\r\n        this.resourceToChangeAr = resourceToChangeAr;\r\n\r\n        this.configManager = configManager;\r\n        this.eventManager = eventManager;\r\n    }\r\n\r\n    buildBuilding() {\r\n        return this.tryToBuild();\r\n    }\r\n\r\n    tryToBuild() {\r\n        let result = true;\r\n\r\n        if (this.checkEnoughResource()) {\r\n            this.configManager.wood.changeValue(-this.woodPrice);\r\n            this.configManager.stone.changeValue(-this.stonePrice);\r\n\r\n            for (let i = 0; i < this.resourceToChangeAr[0].length; i++) {\r\n                this.resourceToChangeAr[0][i].changeValue(this.resourceToChangeAr[1][i]);\r\n            }\r\n        } else {\r\n            this.eventManager.showEventMsgToUser(\"more resources\");\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    checkEnoughResource() {\r\n        return +this.configManager.wood >= this.woodPrice && +this.configManager.stone >= this.stonePrice;\r\n    }\r\n}\r\n\r\n/**\r\n * Class decorator for Building\r\n * Add showing new elements on the page.\r\n */\r\nclass BuildingWithShowElement {\r\n    constructor(building, pageManager, flag, showElementAr) {\r\n        this.building = building;\r\n\r\n        this.pageManager = pageManager;\r\n        this.flag = flag;\r\n        this.showElementAr = showElementAr;\r\n    }\r\n\r\n    buildBuilding() {\r\n        let result = this.building.tryToBuild();\r\n        if (!this.flag && result) {\r\n            this.pageManager.showElement(this.showElementAr);\r\n            this.flag = true;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (BuilderManager);\n\n//# sourceURL=webpack:///./src/builderManager.js?");

/***/ }),

/***/ "./src/citizenManager.js":
/*!*******************************!*\
  !*** ./src/citizenManager.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * Manage people\r\n */\r\nclass CitizenManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n    }\r\n\r\n    tryToCreateCitizen(quantity) {\r\n        let result = false;\r\n\r\n        if (this.checkCitizenCost(quantity) && this.checkFreeHouses(quantity)) {\r\n            this.configManager.food.changeValue(-this.configManager.citizenCost * quantity);\r\n            this.addCitizen(quantity);\r\n\r\n            this.setHappyPeople();\r\n            this.setHealthyPeople();\r\n\r\n            this.pageManager.checkProduction();\r\n            this.pageManager.checkOverpopulated();\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    checkCitizenCost(quantity) {\r\n        let result = true;\r\n        if (+this.configManager.food < this.configManager.citizenCost * quantity) {\r\n            result = false;\r\n            this.eventManager.showEventMsgToUser(\"not enough food\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    checkFreeHouses(quantity) {\r\n        let result = true;\r\n        if ((+this.configManager.currentPopulation + quantity) > +this.configManager.populationStorage) {\r\n            result = false;\r\n            this.eventManager.showEventMsgToUser(\"not enough houses\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Just add new citizen\r\n     * @param quantity - how many\r\n     */\r\n    addCitizen(quantity) {\r\n        let previousValue = +this.configManager.currentPopulation.storage;\r\n        this.configManager.currentPopulation.storage.setValue(Number.MAX_SAFE_INTEGER);\r\n        this.configManager.currentPopulation.changeValue(quantity);\r\n        // It allows to pass current population storage limit\r\n        this.configManager.currentPopulation.storage.setValue(previousValue);\r\n\r\n        this.configManager.lazybones.changeValue(quantity);\r\n        this.configManager.foodTotalProduction.changeValue(-quantity);\r\n    }\r\n\r\n    setHappyPeople() {\r\n        if (+this.configManager.currentPopulation <= +this.configManager.dj * this.configManager.spaceForPeopleInClub) {\r\n            this.configManager.currentHappyPeople.setValue(+this.configManager.currentPopulation);\r\n        }\r\n    }\r\n\r\n    setHealthyPeople() {\r\n        if (+this.configManager.currentPopulation <= +this.configManager.instructor * this.configManager.spaceForPeopleInClub) {\r\n            this.configManager.currentHealthyPeople.setValue(+this.configManager.currentPopulation);\r\n        }\r\n    }\r\n\r\n    setCitizenToWork(workType, quantity) {\r\n        let result = this.checkOpportunityToSetCitizen(workType, quantity);\r\n        if (result) {\r\n            this.setWorker(workType, quantity);\r\n            this.pageManager.checkLeaderPresence(result, workType);\r\n            this.pageManager.checkLeaderPresence2(result, workType);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    checkOpportunityToSetCitizen(workType, quantity) {\r\n        let result = false;\r\n\r\n        // add worker\r\n        if (quantity > 0) {\r\n            if (this.checkLazybonesPresence()) {\r\n                if (+this.configManager.lazybones >= quantity) {\r\n                    // check enough buildings\r\n                    if (workType === this.configManager.scientist && this.configManager.scientist.isMaxStorage()) {\r\n                        this.eventManager.showEventMsgToUser(\"more campfires\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.writer && this.configManager.writer.isMaxStorage()) {\r\n                        this.eventManager.showEventMsgToUser(\"more libraries\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.dj && this.configManager.dj.isMaxStorage()) {\r\n                        this.eventManager.showEventMsgToUser(\"more music clubs\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.instructor && this.configManager.instructor.isMaxStorage()) {\r\n                        this.eventManager.showEventMsgToUser(\"more yoga clubs\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.weaponMaster && this.configManager.weaponMaster.isMaxStorage()) {\r\n                        this.eventManager.showEventMsgToUser(\"more armory\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.warrior && this.configManager.warrior.isMaxStorage()) {\r\n                        this.eventManager.showEventMsgToUser(\"more barrack\");\r\n                        return result;\r\n                    } else if (workType === this.configManager.warrior && quantity > +this.configManager.weapon) {\r\n                        this.eventManager.showEventMsgToUser(\"weapon lack\");\r\n                        return result;\r\n                    }\r\n\r\n                    // for funeral\r\n                } else {\r\n                    this.eventManager.showEventMsgToUser(\"1 funeral process needs 2 workers\");\r\n                    return result;\r\n                }\r\n\r\n                result = true;\r\n            }\r\n\r\n            // remove worker\r\n        } else if (+workType) {\r\n            result = true;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    checkLazybonesPresence() {\r\n        let result = true;\r\n        if (!+this.configManager.lazybones) {\r\n            this.eventManager.showEventMsgToUser(\"lack of lazybones\");\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setWorker(workType, quantity) {\r\n        this.configManager.lazybones.changeValue(-quantity);\r\n        workType.changeValue(quantity);\r\n\r\n        if (workType === this.configManager.farmer) {\r\n            this.configManager.foodTotalProduction.changeValue(this.configManager.farmerProduction * quantity);\r\n        } else if (workType === this.configManager.woodman) {\r\n            this.configManager.woodTotalProduction.changeValue(this.configManager.woodmanProduction * quantity);\r\n        } else if (workType === this.configManager.miner) {\r\n            this.configManager.stoneTotalProduction.changeValue(this.configManager.minerProduction * quantity);\r\n        } else if (workType === this.configManager.scientist) {\r\n            this.configManager.knowledgeTotalProduction.changeValue(this.configManager.scientistProduction * quantity);\r\n        } else if (workType === this.configManager.writer) {\r\n            this.configManager.scrollTotalProduction.changeValue(0.2 * quantity);\r\n        } else if (workType === this.configManager.weaponMaster) {\r\n            this.configManager.weaponTotalProduction.changeValue(this.configManager.weaponMasterProduction * quantity);\r\n            this.configManager.woodTotalProduction.changeValue(-0.2 * quantity);\r\n            this.configManager.stoneTotalProduction.changeValue(-0.2 * quantity);\r\n        } else if (workType === this.configManager.warrior) {\r\n            this.configManager.weapon.changeValue(-quantity);\r\n        } else if (workType === this.configManager.dj) {\r\n            let peopleAmount = +this.configManager.currentPopulation;\r\n            let totalAvailableSpaceInClub = +this.configManager.dj * this.configManager.spaceForPeopleInClub;\r\n            let curHappyPeople = peopleAmount <= totalAvailableSpaceInClub ? peopleAmount : totalAvailableSpaceInClub;\r\n            this.configManager.currentHappyPeople.setValue(curHappyPeople);\r\n\r\n            if (!this.configManager.djProductivityFlag) {\r\n                this.configManager.changeAllProduction(true);\r\n                this.configManager.djProductivityFlag = true;\r\n            }\r\n        } else if (workType === this.configManager.instructor) {\r\n            let peopleAmount = +this.configManager.currentPopulation;\r\n            let totalAvailableSpaceInClub = +this.configManager.instructor * this.configManager.spaceForPeopleInClub;\r\n            let curHealthyPeople = peopleAmount <= totalAvailableSpaceInClub ? peopleAmount : totalAvailableSpaceInClub;\r\n            this.configManager.currentHealthyPeople.setValue(curHealthyPeople);\r\n\r\n            if (!this.configManager.instructorProductivityFlag) {\r\n                this.configManager.changeAllProduction(true);\r\n                this.configManager.instructorProductivityFlag = true;\r\n            }\r\n        }\r\n\r\n        this.pageManager.checkProduction();\r\n    }\r\n\r\n    // TODO Try to refactor this part in the next time (create new classes for citizens, for jobs, extend from Resource)\r\n    findPersonToKill() {\r\n        $(\"#audio-no\")[0].play();\r\n\r\n        let withDecrease = true;\r\n        if (+this.configManager.lazybones) {\r\n            withDecrease = false;\r\n            this.killLazybone();\r\n        } else if (+this.configManager.woodman) {\r\n            withDecrease = false;\r\n            this.killWoodcutter();\r\n        } else if (+this.configManager.miner) {\r\n            withDecrease = false;\r\n            this.killMiner();\r\n        } else if (+this.configManager.funeral) {\r\n            this.configManager.funeral.changeValue(-2);\r\n            this.configManager.lazybones.changeValue(1);\r\n        } else if (+this.configManager.scientist) {\r\n            withDecrease = false;\r\n            this.killScientist();\r\n        } else if (+this.configManager.dj) {\r\n            this.configManager.dj.changeValue(-1);\r\n            this.configManager.currentHappyPeople.changeValue(-(+this.configManager.currentPopulation <= this.configManager.spaceForPeopleInClub ? +this.configManager.currentPopulation\r\n                : (this.configManager.spaceForPeopleInClub - 1)));\r\n            if (!+this.configManager.dj) {\r\n                this.configManager.changeAllProduction(false);\r\n                this.configManager.djProductivityFlag = false;\r\n            }\r\n        } else if (+this.configManager.instructor) {\r\n            this.configManager.instructor.changeValue(-1);\r\n            this.configManager.currentHealthyPeople.changeValue(-(+this.configManager.currentPopulation <= this.configManager.spaceForPeopleInClub ? +this.configManager.currentPopulation\r\n                : (this.configManager.spaceForPeopleInClub - 1)));\r\n            if (!+this.configManager.instructor) {\r\n                this.configManager.changeAllProduction(false);\r\n                this.configManager.instructorPresentFlag = false;\r\n            }\r\n        } else if (+this.configManager.leader) {\r\n            this.configManager.leader.changeValue(-1);\r\n            if (!this.configManager.leaderPresent2ResearchFlag && this.pageManager.addLeaderButton.css(\"display\") === \"none\") {\r\n                this.pageManager.addLeaderButton.show(\"slow\");\r\n            }\r\n            if (+this.configManager.leader < 10 && this.configManager.leaderPresent2Flag) {\r\n                // this.pageManager.hideElement([this.pageManager.maxWorkTd]);\r\n                this.pageManager.maxWorkTd.slideUp(\"slow\");\r\n                this.pageManager.workTableEmptyTd.attr(\"colspan\", \"7\");\r\n                this.configManager.leaderPresent2Flag = false;\r\n            }\r\n            if (!+this.configManager.leader && this.configManager.leaderPresentFlag) {\r\n                // this.pageManager.hideElement([this.pageManager.tenWorkTd]);\r\n                this.pageManager.tenWorkTd.slideUp(\"slow\");\r\n                this.pageManager.workTableEmptyTd.attr(\"colspan\", \"5\");\r\n                this.configManager.leaderPresentFlag = false;\r\n            }\r\n        } else if (+this.configManager.writer) {\r\n            withDecrease = false;\r\n            this.killWorker(this.configManager.writer);\r\n        } else if (+this.configManager.weaponMaster) {\r\n            withDecrease = false;\r\n            this.killWorker(this.configManager.weaponMaster);\r\n        } else if (+this.configManager.scout) {\r\n            withDecrease = false;\r\n            this.killWorker(this.configManager.scout);\r\n        } else if (+this.configManager.warrior) {\r\n            withDecrease = false;\r\n            this.killWarrior();\r\n        } else if (+this.configManager.farmer) {\r\n            withDecrease = false;\r\n            this.killFarmer();\r\n        }\r\n\r\n        if (withDecrease) {\r\n            this.decreasePopulation();\r\n        }\r\n\r\n        this.pageManager.checkProduction();\r\n        this.pageManager.checkOverpopulated();\r\n    }\r\n\r\n    killLazybone() {\r\n        this.decreasePopulation();\r\n        this.configManager.lazybones.changeValue(-1);\r\n    }\r\n\r\n    killWarrior() {\r\n        this.decreasePopulation();\r\n        this.configManager.warrior.changeValue(-1);\r\n    }\r\n\r\n    killFarmer() {\r\n        this.killWorker(this.configManager.farmer, this.configManager.foodTotalProduction, this.configManager.farmerProduction);\r\n    }\r\n\r\n    killWoodcutter() {\r\n        this.killWorker(this.configManager.woodman, this.configManager.woodTotalProduction, this.configManager.woodmanProduction);\r\n    }\r\n\r\n    killMiner() {\r\n        this.killWorker(this.configManager.miner, this.configManager.stoneTotalProduction, this.configManager.minerProduction);\r\n    }\r\n\r\n    killScientist() {\r\n        this.killWorker(this.configManager.scientist, this.configManager.knowledgeTotalProduction, this.configManager.scientistProduction);\r\n    }\r\n\r\n    // killWorker(workerType, totalProduction, curUnitProduction) {\r\n    //     this.decreasePopulation();\r\n    //\r\n    //     workerType.changeValue(-1);\r\n    //     totalProduction.changeValue(-curUnitProduction);\r\n    // }\r\n\r\n    killWorker(workerType) {\r\n        this.setCitizenToWork(workerType, -1);\r\n        this.killLazybone();\r\n    }\r\n\r\n    decreasePopulation() {\r\n        this.configManager.currentPopulation.changeValue(-1);\r\n        this.configManager.foodTotalProduction.changeValue(1);\r\n\r\n        this.checkCorpseVisibility();\r\n        this.configManager.corpse.changeValue(1);\r\n    }\r\n\r\n    checkCorpseVisibility() {\r\n        if (!this.configManager.corpsePresenceFlag) {\r\n            this.pageManager.showElement([this.pageManager.corpseRow]);\r\n            this.configManager.corpsePresenceFlag = true;\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (CitizenManager);\n\n//# sourceURL=webpack:///./src/citizenManager.js?");

/***/ }),

/***/ "./src/configManager.js":
/*!******************************!*\
  !*** ./src/configManager.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass ConfigManager {\r\n    constructor() {\r\n        this.userKey = \"USER_NAME\";\r\n        this.userName = \"\";\r\n\r\n        this.foodIncreaseStep = 0.15;\r\n        this.woodIncreaseStep = 0.125;\r\n        this.stoneIncreaseStep = 0.05;\r\n        this.knowledgeIncreaseStep = 0.025;\r\n        this.clickEfficiency = 1;\r\n        this.WINNER_REQUIREMENTS = 1e6;\r\n\r\n        // Flags\r\n        this.showPeopleTableFlag = false;\r\n        this.corpsePresenceFlag = false;\r\n        this.buildFuneralFlag = false;\r\n\r\n        this.showWorkTableFlag = false;\r\n        this.leaderPresentFlag = false;\r\n        this.leaderPresent2Flag = false;\r\n        this.leaderPresent2ResearchFlag = false;\r\n        this.djPresentFlag = false;\r\n        this.djProductivityFlag = false;\r\n        this.instructorPresentFlag = false;\r\n        this.instructorProductivityFlag = false;\r\n        this.writerPresentFlag = false;\r\n\r\n        this.showBuildingTableFlag = false;\r\n        this.barrackPresentFlag = false;\r\n        this.palacePresentFlag = false;\r\n        this.armoryPresentFlag = false;\r\n        this.showTechnologyTableFlag = false;\r\n        this.showPetTableFlag = false;\r\n        this.productivityAchievementFlag = false;\r\n        this.starvationAchievementFlag = false;\r\n\r\n        this.scoutingResearchFlag = false;\r\n\r\n        // Building benefit\r\n        this.foodInGranary = 50;\r\n        this.resInPit = 50;\r\n        this.spaceInTent = 2;\r\n        this.spaceInHut = 5;\r\n        this.spaceInDuplex = 20;\r\n        this.spaceInCamprire = 2;\r\n        this.spaceInDolmen = 5;\r\n        this.spaceInParthenon = 12;\r\n        this.spaceInLibrary = 1;\r\n        this.spaceForWorkerInClub = 1;\r\n        this.spaceForPeopleInClub = 25;\r\n        this.spaceInPalace = 5;\r\n        this.spaceInBarrack = 10;\r\n        // TECHNOLOGY COST\r\n        // changes\r\n        this.agricultureCost = 30;\r\n        this.architectureCost = 30;\r\n        this.funeralCost = 30;\r\n        // changes2\r\n        this.changes2Cost = 75;\r\n        this.leadershipCost = 100;\r\n        this.agriculture2Cost = 100;\r\n        this.architecture2Cost = 100;\r\n        // stone age\r\n        this.stoneAgeCost = 300;\r\n        this.architecture3Cost = 250;\r\n        this.musicCost = 250;\r\n        this.sportCost = 250;\r\n        this.toolCost = 250;\r\n        this.hoeCost = 300;\r\n        this.axeCost = 300;\r\n        this.pickaxeCost = 300;\r\n        this.bothSideScrollCost = 10;\r\n        // bronze age\r\n        this.bronzeAgeCost = 12e2;\r\n        this.architecture4Cost = 1e3;\r\n        this.wheelCost = 1e3;\r\n        this.agriculture3Cost = 15e2;\r\n        this.leadership2Cost = 15e2;\r\n        this.packagingCost = 15e2;\r\n        this.scoutingCost = 15e2;\r\n        this.ancientWeaponCost = 2e3;\r\n        this.architecture5Cost = 25e2;\r\n        this.domesticationCost = 5e3;\r\n        this.mysticismCost = 5e3;\r\n        this.toolAgeCost = 5e3;\r\n\r\n        // TODO change to JSON\r\n        // for saving/loading\r\n        this.initialValueMap = new Map([\r\n            [\"foodStorage\", 100],\r\n            [\"food\", 0],\r\n            [\"foodTotalProduction\", 0],\r\n\r\n            [\"woodStorage\", 100],\r\n            [\"wood\", 0],\r\n            [\"woodTotalProduction\", 0],\r\n\r\n            [\"stoneStorage\", 100],\r\n            [\"stone\", 0],\r\n            [\"stoneTotalProduction\", 0],\r\n\r\n            [\"knowledgeStorage\", 30],\r\n            [\"knowledge\", 0],\r\n            [\"knowledgeTotalProduction\", 0],\r\n            [\"scrollTotalProduction\", 0],\r\n\r\n            [\"weapon\", 0],\r\n            [\"weaponTotalProduction\", 0],\r\n\r\n            [\"populationStorage\", 5],\r\n            [\"currentPopulation\", 0],\r\n            [\"corpse\", 0],\r\n            [\"corpseStorage\", 0],\r\n            [\"inGraveQuantity\", 0],\r\n            [\"happyPeopleStorage\", 0],\r\n            [\"currentHappyPeople\", 0],\r\n            [\"healthyPeopleStorage\", 0],\r\n            [\"currentHealthyPeople\", 0],\r\n            [\"productivity\", 100],\r\n\r\n            [\"dragon\", 0],\r\n            [\"dragonTotalConsumption\", 0],\r\n            [\"cat\", 0],\r\n            [\"catTotalConsumption\", 0],\r\n\r\n            [\"lazybones\", 0],\r\n            [\"farmer\", 0],\r\n            [\"woodman\", 0],\r\n            [\"miner\", 0],\r\n            [\"funeral\", 0],\r\n            [\"scientistStorage\", 0],\r\n            [\"scientist\", 0],\r\n            [\"writerStorage\", 0],\r\n            [\"writer\", 0],\r\n            [\"djStorage\", 0],\r\n            [\"dj\", 0],\r\n            [\"instructorStorage\", 0],\r\n            [\"instructor\", 0],\r\n            [\"leader\", 0],\r\n            [\"scout\", 0],\r\n            [\"weaponMasterStorage\", 0],\r\n            [\"weaponMaster\", 0],\r\n            [\"warriorStorage\", 0],\r\n            [\"warrior\", 0],\r\n\r\n            [\"grave\", 0],\r\n            [\"graveyard\", 0],\r\n            [\"scroll\", 0],\r\n            [\"granary\", 0],\r\n            [\"pit\", 0],\r\n            [\"tent\", 0],\r\n            [\"hut\", 0],\r\n            [\"duplex\", 0],\r\n            [\"campfire\", 0],\r\n            [\"dolmen\", 0],\r\n            [\"parthenon\", 0],\r\n            [\"library\", 0],\r\n            [\"musicClub\", 0],\r\n            [\"yogaClub\", 0],\r\n            [\"palace\", 0],\r\n            [\"armory\", 0],\r\n            [\"barrack\", 0],\r\n\r\n            [\"knowledgeInScroll\", 5],\r\n            [\"resourcesInStorage\", 50],\r\n        ]);\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        let pageManager = gameManager.pageManager;\r\n\r\n        // Resources\r\n        this.foodStorage = new Resource(this.initialValueMap.get(\"foodStorage\"), pageManager.maxFoodQuantityElement, 0);\r\n        this.food = new Resource(this.initialValueMap.get(\"food\"), pageManager.foodQuantityElement, 0, this.foodStorage);\r\n        this.farmerProduction = 1.2;\r\n        this.foodTotalProduction = new Resource(this.initialValueMap.get(\"foodTotalProduction\"), pageManager.foodProductionElement, 1);\r\n\r\n        this.woodStorage = new Resource(this.initialValueMap.get(\"woodStorage\"), pageManager.maxWoodQuantityElement, 0);\r\n        this.wood = new Resource(this.initialValueMap.get(\"wood\"), pageManager.woodQuantityElement, 0, this.woodStorage);\r\n        this.woodmanProduction = 0.5;\r\n        this.woodTotalProduction = new Resource(this.initialValueMap.get(\"woodTotalProduction\"), pageManager.woodProductionElement, 1);\r\n\r\n        this.stoneStorage = new Resource(this.initialValueMap.get(\"stoneStorage\"), pageManager.maxStoneQuantityElement, 0);\r\n        this.stone = new Resource(this.initialValueMap.get(\"stone\"), pageManager.stoneQuantityElement, 0, this.stoneStorage);\r\n        this.minerProduction = 0.2;\r\n        this.stoneTotalProduction = new Resource(this.initialValueMap.get(\"stoneTotalProduction\"), pageManager.stoneProductionElement, 1);\r\n\r\n        this.knowledgeStorage = new Resource(this.initialValueMap.get(\"knowledgeStorage\"), pageManager.maxKnowledgeQuantityElement, 0);\r\n        this.knowledge = new Resource(this.initialValueMap.get(\"knowledge\"), pageManager.knowledgeQuantityElement, 0, this.knowledgeStorage);\r\n        this.scientistProduction = 0.1;\r\n        this.knowledgeTotalProduction = new Resource(this.initialValueMap.get(\"knowledgeTotalProduction\"), pageManager.knowledgeProductionElement, 1);\r\n        this.scrollTotalProduction = new Resource(this.initialValueMap.get(\"scrollTotalProduction\"), pageManager.scrollProductionElement, 1);\r\n\r\n        this.weapon = new Resource(this.initialValueMap.get(\"weapon\"), pageManager.weaponQuantityElement, 0);\r\n        this.weaponMasterProduction = 0.2;\r\n        this.weaponTotalProduction = new Resource(this.initialValueMap.get(\"weaponTotalProduction\"), pageManager.weaponProductionElement, 1);\r\n\r\n        // People\r\n        this.citizenCost = 10;\r\n        this.populationStorage = new Resource(this.initialValueMap.get(\"populationStorage\"), pageManager.maxPopulationElement, 0);\r\n        this.currentPopulation = new Resource(this.initialValueMap.get(\"currentPopulation\"), pageManager.curPopulationElement, 0, this.populationStorage);\r\n        this.corpse = new Resource(this.initialValueMap.get(\"corpse\"), pageManager.corpseQuantityElement, 0);\r\n        this.corpseStorage = new Resource(this.initialValueMap.get(\"corpseStorage\"), pageManager.maxInGravesQuantityElement, 0);\r\n        this.inGraveQuantity = new Resource(this.initialValueMap.get(\"inGraveQuantity\"), pageManager.inGraveQuantityElement, 0, this.corpseStorage);\r\n        this.happyPeopleStorage = new Resource(this.initialValueMap.get(\"happyPeopleStorage\"), pageManager.maxHappyPeopleElement, 0);\r\n        this.currentHappyPeople = new Resource(this.initialValueMap.get(\"currentHappyPeople\"), pageManager.curHappyPeopleElement, 0, this.happyPeopleStorage);\r\n        this.healthyPeopleStorage = new Resource(this.initialValueMap.get(\"healthyPeopleStorage\"), pageManager.maxHealthyPeopleElement, 0);\r\n        this.currentHealthyPeople = new Resource(this.initialValueMap.get(\"currentHealthyPeople\"), pageManager.curHealthyPeopleElement, 0, this.healthyPeopleStorage);\r\n        this.productivity = new Resource(this.initialValueMap.get(\"productivity\"), pageManager.productivityQuantityElement, 2);\r\n\r\n        // Pet\r\n        this.dragon = new Resource(this.initialValueMap.get(\"dragon\"), pageManager.curDragonElement, 0);\r\n        this.dragonTotalConsumption = new Resource(this.initialValueMap.get(\"dragonTotalConsumption\"), pageManager.dragonConsumptionElement, 1);\r\n        this.cat = new Resource(this.initialValueMap.get(\"cat\"), pageManager.curCatElement, 0);\r\n        this.catTotalConsumption = new Resource(this.initialValueMap.get(\"catTotalConsumption\"), pageManager.catConsumptionElement, 1);\r\n\r\n        // Work\r\n        this.lazybones = new Resource(this.initialValueMap.get(\"lazybones\"), pageManager.curLazybonesElement, 0);\r\n        this.farmer = new Resource(this.initialValueMap.get(\"farmer\"), pageManager.farmerQuantityElement, 0);\r\n        this.woodman = new Resource(this.initialValueMap.get(\"woodman\"), pageManager.woodmenQuantityElement, 0);\r\n        this.miner = new Resource(this.initialValueMap.get(\"miner\"), pageManager.minerQuantityElement, 0);\r\n        this.funeral = new Resource(this.initialValueMap.get(\"funeral\"), pageManager.funeralQuantityElement, 0);\r\n        this.scientistStorage = new Resource(this.initialValueMap.get(\"scientistStorage\"), pageManager.maxScientistQuantityElement, 0);\r\n        this.scientist = new Resource(this.initialValueMap.get(\"scientist\"), pageManager.curScientistQuantityElement, 0, this.scientistStorage);\r\n        this.writerStorage = new Resource(this.initialValueMap.get(\"writerStorage\"), pageManager.maxWriterQuantityElement, 0);\r\n        this.writer = new Resource(this.initialValueMap.get(\"writer\"), pageManager.curWriterQuantityElement, 0, this.writerStorage);\r\n        this.djStorage = new Resource(this.initialValueMap.get(\"djStorage\"), pageManager.maxDjQuantityElement, 0);\r\n        this.dj = new Resource(this.initialValueMap.get(\"dj\"), pageManager.djQuantityElement, 0, this.djStorage);\r\n        this.instructorStorage = new Resource(this.initialValueMap.get(\"instructorStorage\"), pageManager.maxInstructorQuantityElement, 0);\r\n        this.instructor = new Resource(this.initialValueMap.get(\"instructor\"), pageManager.instructorQuantityElement, 0, this.instructorStorage);\r\n        this.leader = new Resource(this.initialValueMap.get(\"leader\"), pageManager.leaderQuantityElement, 0);\r\n        this.scout = new Resource(this.initialValueMap.get(\"scout\"), pageManager.scoutQuantityElement, 0);\r\n        this.weaponMasterStorage = new Resource(this.initialValueMap.get(\"weaponMasterStorage\"), pageManager.maxWeaponMasterQuantityElement, 0);\r\n        this.weaponMaster = new Resource(this.initialValueMap.get(\"weaponMaster\"), pageManager.weaponMasterQuantityElement, 0, this.weaponMasterStorage);\r\n        this.warriorStorage = new Resource(this.initialValueMap.get(\"warriorStorage\"), pageManager.maxWarriorQuantityElement, 0);\r\n        this.warrior = new Resource(this.initialValueMap.get(\"warrior\"), pageManager.warriorQuantityElement, 0, this.warriorStorage);\r\n\r\n        // Buildings\r\n        this.grave = new Resource(this.initialValueMap.get(\"grave\"), pageManager.graveQuantityElement, 0);\r\n        this.graveyard = new Resource(this.initialValueMap.get(\"graveyard\"), pageManager.graveyardQuantityElement, 0);\r\n        this.scroll = new Resource(this.initialValueMap.get(\"scroll\"), pageManager.scrollQuantityElement, 0);\r\n        this.granary = new Resource(this.initialValueMap.get(\"granary\"), pageManager.granaryQuantityElement, 0);\r\n        this.pit = new Resource(this.initialValueMap.get(\"pit\"), pageManager.pitQuantityElement, 0);\r\n        this.tent = new Resource(this.initialValueMap.get(\"tent\"), pageManager.tentQuantityElement, 0);\r\n        this.hut = new Resource(this.initialValueMap.get(\"hut\"), pageManager.hutQuantityElement, 0);\r\n        this.duplex = new Resource(this.initialValueMap.get(\"duplex\"), pageManager.duplexQuantityElement, 0);\r\n        this.campfire = new Resource(this.initialValueMap.get(\"campfire\"), pageManager.campfireQuantityElement, 0);\r\n        this.dolmen = new Resource(this.initialValueMap.get(\"dolmen\"), pageManager.dolmenQuantityElement, 0);\r\n        this.parthenon = new Resource(this.initialValueMap.get(\"parthenon\"), pageManager.parthenonQuantityElement, 0);\r\n        this.library = new Resource(this.initialValueMap.get(\"library\"), pageManager.libraryQuantityElement, 0);\r\n        this.musicClub = new Resource(this.initialValueMap.get(\"musicClub\"), pageManager.musicClubQuantityElement, 0);\r\n        this.yogaClub = new Resource(this.initialValueMap.get(\"yogaClub\"), pageManager.yogaClubQuantityElement, 0);\r\n        this.palace = new Resource(this.initialValueMap.get(\"palace\"), pageManager.palaceQuantityElement, 0);\r\n        this.armory = new Resource(this.initialValueMap.get(\"armory\"), pageManager.armoryQuantityElement, 0);\r\n        this.barrack = new Resource(this.initialValueMap.get(\"barrack\"), pageManager.barrackQuantityElement, 0);\r\n\r\n        // Building benefit\r\n        this.knowledgeInScroll = new Resource(this.initialValueMap.get(\"knowledgeInScroll\"), undefined, 0);\r\n        this.resourcesInStorage = new Resource(this.initialValueMap.get(\"resourcesInStorage\"), undefined, 0);\r\n    }\r\n\r\n    changeAllProduction(increase) {\r\n        let mathSign = increase ? 1 : -1;\r\n        this.productivity.changeValue(mathSign * 25);\r\n        this.changeProduction(\"food\", increase);\r\n        this.changeProduction(\"wood\", increase);\r\n        this.changeProduction(\"stone\", increase);\r\n        this.changeProduction(\"knowledge\", increase);\r\n    }\r\n\r\n    // TODO Replace to resources\r\n    changeProduction(what, increase) {\r\n        let multiply = increase ? 1 : -1;\r\n        switch (what) {\r\n            case \"food\":\r\n                this.farmerProduction = Math.round(this.farmerProduction * 1e3 + multiply * this.foodIncreaseStep * 1e3) / 1e3;\r\n                this.foodTotalProduction.changeValue(multiply * +this.farmer * this.foodIncreaseStep);\r\n                break;\r\n            case \"wood\":\r\n                this.woodmanProduction = Math.round(this.woodmanProduction * 1e3 + multiply * this.woodIncreaseStep * 1e3) / 1e3;\r\n                this.woodTotalProduction.changeValue(multiply * +this.woodman * this.woodIncreaseStep);\r\n                break;\r\n            case \"stone\":\r\n                this.minerProduction = Math.round(this.minerProduction * 1e3 + multiply * this.stoneIncreaseStep * 1e3) / 1e3;\r\n                this.stoneTotalProduction.changeValue(multiply * +this.miner * this.stoneIncreaseStep);\r\n                break;\r\n            case \"knowledge\":\r\n                this.scientistProduction = Math.round(this.scientistProduction * 1e3 + this.knowledgeIncreaseStep * 1e3) / 1e3;\r\n                this.knowledgeTotalProduction.changeValue(+this.scientist * this.knowledgeIncreaseStep);\r\n                break;\r\n        }\r\n    }\r\n\r\n    getFullResources() {\r\n        this.food.changeValue(+this.foodStorage);\r\n        this.wood.changeValue(+this.woodStorage);\r\n        this.stone.changeValue(+this.stoneStorage);\r\n\r\n        this.knowledge.changeValue(+this.knowledgeStorage);\r\n\r\n        this.weapon.changeValue(10);\r\n\r\n        $(\"#audio-game-over\")[0].play();\r\n    }\r\n}\r\n\r\nclass Resource {\r\n    constructor(value, element, toFixed, storage) {\r\n        this.value = value;\r\n        this.element = element;\r\n        this.toFixed = toFixed;\r\n        this.storage = storage;\r\n    }\r\n\r\n    changeValue(quantity) {\r\n        this.value = (this.value * 1e3 + quantity * 1e3) / 1e3;\r\n\r\n        this.fixValue();\r\n    }\r\n\r\n    setValue(value) {\r\n        this.value = value;\r\n\r\n        this.fixValue();\r\n    }\r\n\r\n    fixValue() {\r\n        this.fixToStorage();\r\n        this.fixPrecision();\r\n    }\r\n\r\n    fixToStorage() {\r\n        if (this.storage && this.isMaxStorage()) {\r\n            this.value = this.storage.value;\r\n        }\r\n    }\r\n\r\n    isMaxStorage() {\r\n        return this.value >= this.storage.value;\r\n    }\r\n\r\n    fixPrecision() {\r\n        if (this.element) {\r\n            if (this.toFixed) {\r\n                this.element.text(this.value.toFixed(this.toFixed));\r\n            } else {\r\n                this.element.text(Math.floor(this.value));\r\n            }\r\n        }\r\n    }\r\n\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ConfigManager);\n\n//# sourceURL=webpack:///./src/configManager.js?");

/***/ }),

/***/ "./src/eventManager.js":
/*!*****************************!*\
  !*** ./src/eventManager.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// TODO refactoring this class\r\nclass EventManager {\r\n    constructor() {\r\n        // Msg's\r\n        // this.okMsg = \"Everything is ok. Let s relax. ☕\";\r\n        this.lackLazyboneMsg = \"&#9888; Find more lazybones. 👷‍♂\";\r\n        this.starvationMsg = \"🍽️ HELP!!! We don't have enough food. :(\";\r\n        this.moreResourceMsg = \"&#9888; Collect more resources.\";\r\n        this.moreKnowledgeMsg = \"&#9888; Collect more knowledge.\";\r\n        this.moreScienceBuildingMsg = \"&#9888; Build more science buildings.\";\r\n        this.moreLibraryBuildingMsg = \"&#9888; Build more library buildings.\";\r\n        this.moreMusicClubsMsg = \"&#9888; Build more entertainment buildings.\";\r\n        this.moreYogaClubsMsg = \"&#9888; Build more health buildings.\";\r\n        this.moreArmoryMsg = \"&#9888; Build more armory buildings.\";\r\n        this.moreBarrackMsg = \"&#9888; Build more barracks.\";\r\n        this.moreWeaponMsg = \"&#9888; Produce more weapon.\";\r\n        this.funeralProccessMoreWorkersMsg = \"👥👥 One funeral requires 2 workers.\";\r\n        // this.elvesCantCutTreeMsgPart1 = \"🧝🧝 Elves can't cut trees, so sometimes they take it from the others. They said - THANK YOU. And took: \";\r\n        // this.elvesCantCutTreePart2 = \" of your wood.\";\r\n        // this.elvesAreDisappointed = \"🧝🧝 You don t have wood. Elves are disappointed of us.. :((\";\r\n        // this.elvesLike = \"🧝🧝 Main Elf said - we like you.\";\r\n        // this.nightmareMsg = \"👩‍🌾👩‍🌾  Your farmers said that they saw strange nightmares. 👾👾\";\r\n        // this.strangeInTheSkiesMsg = \"👩‍🌾👩‍🌾 Your farmers said that they saw something strange in the skies. You said - ha, rich imagination\";\r\n        // this.ufoKilledMsgPart1 = \"🛸 Ufo Aliens tried to improve your human beings, but it wasn't successful. Unfortunately they killed: \";\r\n        // this.ufoKilledMsgPart2 = \" of your farmers. Maybe in the next time.\";\r\n        // this.ufoArtifactMsgPart1 = \"🛸 Ufo gave to you a mighty artifact, but your people don't know how to apply this and they just exchanged it with more advanced civilization for: \";\r\n        // this.ufoArtifactMsgPart2 = \" stones.\";\r\n        // this.overturnedCorpsesMsg = \"🧑🧑 Your people said that corpses overturned during the last full moon night. You said - ha, rich imagination\";\r\n        // this.foolMoonMsg = \"Your people like fool moon this night 🌘\";\r\n        // this.deathBecauseOfZombie = \"🌘🧛 You people died because of too many zombies.\";\r\n        // this.newAchievement = \"🙊🙈🙉 Get a new achievement.\";\r\n\r\n        // Statuses\r\n        this.successStatus = \"success\";\r\n        this.primaryStatus = \"primary\";\r\n        this.warningStatus = \"dark\";\r\n        this.dangerStatus = \"danger\";\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n\r\n        this.pageManager = this.gameManager.pageManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.citizenManager = this.gameManager.citizenManager;\r\n\r\n        this.eventMap = new Map([\r\n            [1, () => this.nothingHappenEvent()],\r\n            [2, () => this.ufoEvent()],\r\n            [3, () => this.farmerEvent()],\r\n            [4, () => this.weatherEvent()],\r\n            [5, () => this.wildAmazonEvent()],\r\n            [6, () => this.elfEvent()],\r\n            [7, () => this.bloodMoonEvent()],\r\n            [8, () => this.birthDeathCycleEvent()],\r\n            [9, () => this.petsEvent()]\r\n\r\n            // // Drought (-foodProduction)\r\n            // // Animals (-citizen quantity)\r\n            // // Pets (+food consuming)\r\n            // // Im/Emigration (+current population, - knowledge)\r\n            // // Laziness/Motivation (-/+productivity)\r\n        ]);\r\n\r\n        this.achievementImgMap = new Map([\r\n            [\"UFO Alien\", this.pageManager.ufoAchievement],\r\n            [\"Palace\", this.pageManager.palaceAchievement],\r\n            [\"First Research\", this.pageManager.firstResearchAchievement],\r\n            [\"Starvation\", this.pageManager.hungerAchievement],\r\n            [\"Productivity\", this.pageManager.productivityAchievement],\r\n            [\"More Food\", this.pageManager.moreFoodAchievement]\r\n        ]);\r\n\r\n        this.hiddenButtons = [this.pageManager.startAgainButton, this.pageManager.loadButton, this.pageManager.saveButton, this.pageManager.pauseButton];\r\n        this.hiddenLands = [this.pageManager.elfRadioButton, this.pageManager.dwarfRadioButton, this.pageManager.ufoRadioButton, this.pageManager.dragonRadioButton,\r\n            this.pageManager.humanRadioButton, this.pageManager.amazonRadioButton, this.pageManager.spartaRadioButton, this.pageManager.orcRadioButton];\r\n    }\r\n\r\n    showEventMsgToUser(what, changes) {\r\n        $(\"#audio-no\")[0].play();\r\n        // TODO think about this map...\r\n        let msgMap = new Map([\r\n            // [\"ok\", [this.okMsg, this.successStatus]],\r\n            [\"starvation\", [this.starvationMsg, this.dangerStatus]],\r\n            // lack of resource\r\n            [\"not enough food\", [\"&#9888; You need more food.\", this.warningStatus]],\r\n            [\"not enough houses\", [\"&#9888; You need more houses.\", this.warningStatus]],\r\n            [\"more resources\", [this.moreResourceMsg, this.warningStatus]],\r\n            [\"more knowledge\", [this.moreKnowledgeMsg, this.warningStatus]],\r\n            // lack of building\r\n            [\"more campfires\", [this.moreScienceBuildingMsg, this.warningStatus]],\r\n            [\"more libraries\", [this.moreLibraryBuildingMsg, this.warningStatus]],\r\n            [\"more music clubs\", [this.moreMusicClubsMsg, this.warningStatus]],\r\n            [\"more yoga clubs\", [this.moreYogaClubsMsg, this.warningStatus]],\r\n            [\"more armory\", [this.moreArmoryMsg, this.warningStatus]],\r\n            [\"more barrack\", [this.moreBarrackMsg, this.warningStatus]],\r\n            [\"weapon lack\", [this.moreWeaponMsg, this.warningStatus]],\r\n            // lack of free workers\r\n            [\"lack of lazybones\", [this.lackLazyboneMsg, this.warningStatus]],\r\n            [\"1 funeral process needs 2 workers\", [this.funeralProccessMoreWorkersMsg, this.warningStatus]],\r\n            // event\r\n            // ufo\r\n            // [\"ufo gave an useful artifact\", [`🛸 Ufo gives a mighty artifact and your people made a new button from it.&#128526&#128526`, this.successStatus]],\r\n            // [\"ufo gave an artifact\", [`${this.ufoArtifactMsgPart1} ${changes} ${this.ufoArtifactMsgPart2}`, this.successStatus]],\r\n            // [\"strange in the skies\", [this.strangeInTheSkiesMsg, this.primaryStatus]],\r\n            // [\"nightmare\", [this.nightmareMsg, this.primaryStatus]],\r\n            // [\"ufo killed\", [`${this.ufoKilledMsgPart1} ${changes} ${this.ufoKilledMsgPart2}`, this.dangerStatus]],\r\n            // zombie\r\n            // [\"fool moon\", [this.foolMoonMsg, this.primaryStatus]],\r\n            // [\"overturned corpses\", [this.overturnedCorpsesMsg, this.warningStatus]],\r\n            // [\"white walkers in another village\", [`🧛🧛 ${changes} corpses woke up and went to another village. Than they went back to you to sleep.`, this.warningStatus]],\r\n            // [\"white walker killed\", [\"🧛🧛 Some zombies woke up and killed a few of your people. Than they went back. You have more corpses.\", this.dangerStatus]],\r\n            // [\"death because of zombies\", [this.deathBecauseOfZombie, this.dangerStatus]],\r\n            // farmer\r\n            // [\"potatoes\", [`👩‍🌾👩‍🌾 Farmers found ${changes} potatoes.🥔🥔🥔🥔`, this.successStatus]],\r\n            // [\"kiwi\", [`👩‍🌾👩‍🌾 Farmers found ${changes} kiwi fruits.🥝🥝🥝🥝`, this.successStatus]],\r\n            // [\"wild rabbits\", [\"🐰🐰🐰 Farmers saw the wild rabbits.\", this.primaryStatus]],\r\n            // [\"rats\", [`🐀🐀🐀 Rats ate ${changes} of your food.`, this.dangerStatus]],\r\n            // [\"assassin rabbits\", [`🐰🐰🐰 Obviously it was bad decision to take rabbit's food. Assassin rabbits killed : ${changes} farmers.`, this.dangerStatus]],\r\n            // weather\r\n            // [\"middle earthquake\", [`🧶️ There was a middle earthquake. Some trees were down and it gave you : ${changes} woods.`, this.successStatus]],\r\n            // [\"small rain\", [\"🌈 There was a small rain.\", this.primaryStatus]],\r\n            // [\"light earthquake\", [\"🧶 There was a light earthquake.\", this.primaryStatus]],\r\n            // [\"storm\", [`⛈️There is a storm. It spoiled some of your wood: ${changes} is lost.`, this.dangerStatus]],\r\n            // [\"big earthquake\", [`🧶 ☹ There was a big earthquake. Unfortunately it killed: ${changes} of your miners.`, this.dangerStatus]],\r\n            // amazon\r\n            // [\"amazons brought\", [`👧👧👧👧 Amazons brought a few males to your people . ${changes} new free people.`, this.successStatus]],\r\n            // [\"amazons are there\", [\"People saw a lot of beautiful wild amazons 👧👧👧\", this.primaryStatus]],\r\n            // [\"amazons speaking\", [\"👧👧👧 Your people communicated a bit with Amazons.\", this.primaryStatus]],\r\n            // [\"amazons kidnapped\", [`👧👧👧👧 Wild Amazons kidnapped some of your people. Than they brought ${changes} male corpses back, you see smiles on corpse's faces.`, this.dangerStatus]],\r\n            // elf\r\n            // [\"elves like\", [this.elvesLike, this.primaryStatus]],\r\n            // [\"elves are disappointed\", [this.elvesAreDisappointed, this.primaryStatus]],\r\n            // [\"elves can't cut trees\", [`${this.elvesCantCutTreeMsgPart1} ${changes} ${this.elvesCantCutTreePart2}`, this.dangerStatus]],\r\n            // [\"elves don't like\", [`🧝🧝 Elves don't like when you cut trees. They killed: ${changes} of your woodcutters. They said - sorry.`, this.dangerStatus]],\r\n            // lifecycle\r\n            // [\"new people were born\", [`👪👪 ${changes} new people were born.`, this.successStatus]],\r\n            // [\"died because of age\", [`👪👪 ${changes} died because of old age.`, this.dangerStatus]],\r\n            // war tab\r\n            // [\"better knowledge land\", [`Now your people know their land better. 🐾 🗺 Your people get ${changes} knowledge because of scouts.`, this.successStatus]],\r\n            // [\"new lands\", [`Your scouts found a new race, now you can scout them 🐾🐾🐾 🗺 .`, this.successStatus]],\r\n            // [\"lack of attack power\", [`Lack of attack power, find more warrior.`, this.warningStatus]],\r\n            // [\"lose battle\", [`You lost the battle, enemy were stronger.`, this.dangerStatus]],\r\n            // [\"win the battle\", [`You won the battle with the orcs and got ${changes} of wood.`, this.successStatus]],\r\n            // [\"win sparta\", [`You win the battle and can be proud of yourself.`, this.successStatus]],\r\n            // [\"your army left\", [`Instead of attack your army joined to the beautiful amazons.`, this.warningStatus]],\r\n            // [\"amazons join\", [`Amazons like your people, ${changes} amazons joined to you.`, this.successStatus]],\r\n            // [\"attack human\", [`After your attack at the other human beings, they attacked you back and killed ${changes} of your people.`, this.dangerStatus]],\r\n            // [\"win the dragon\", [`You won dragons, got their gold, gems and other treasures. Summary you got ${changes} of gold.`, this.successStatus]],\r\n            // [\"attack ufo\", [`After your attack at Ufo, they takes some of your knowledge.`, this.warningStatus]],\r\n            // [\"attack dwarf\", [`You won the battle with the dwarves and got ${changes} of stone.`, this.warningStatus]],\r\n            // [\"attack elves\", [`You won the elves, elves had a lot of different resources and artifacts, but your warriors got craziness and burnt every useful stuff.`, this.successStatus]]\r\n        ]);\r\n        let msgElem = msgMap.get(what);\r\n        let msg = msgElem[0];\r\n        let status = msgElem[1];\r\n\r\n        if (msg) {\r\n            let event = $(`<div class=\"alert alert-${status} highlight2\" role=\"alert\">${EventManager.getMsgWithTime(msg)}</div>`);\r\n            this.pageManager.eventDiv.after(event);\r\n            event.show(\"slow\");\r\n\r\n            $(\"#events-section\").animate({scrollTop: 0}, \"fast\")\r\n\r\n            $('#events-section div.highlight2').hover(\r\n                function () {\r\n                    $(this).removeClass('highlight2');\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    showMsgToUser(msg, status) {\r\n        let eventElement = $(`<div class=\"alert alert-${status}\" role=\"alert\">${EventManager.getMsgWithTime(msg)}</div>`);\r\n\r\n        this.pageManager.eventDiv.after(eventElement);\r\n        eventElement.show(\"slow\");\r\n\r\n        $(\"#events-section\").animate({scrollTop: 0}, \"fast\")\r\n    }\r\n\r\n    showAchievementToUser(what) {\r\n        $(\"#audio-build-achievement\")[0].play();\r\n        // TODO add flag\r\n        this.pageManager.hideElement([this.pageManager.notAchievement]);\r\n\r\n        let achievementImg = this.achievementImgMap.get(what);\r\n\r\n        if (achievementImg) {\r\n            this.pageManager.gotAchievementQuantitySpan.text(+this.pageManager.gotAchievementQuantitySpan.text() + 1);\r\n            this.pageManager.achievementSection.append(achievementImg);\r\n\r\n            // let event = $(`<div class=\"alert alert-${this.successStatus}\" role=\"alert\"><span>${EventManager.getMsgWithTime(this.newAchievement)}</span></div>`);\r\n            // this.pageManager.eventDiv.after(event);\r\n            // event.show(\"slow\", () => achievementImg.show(\"slow\"));\r\n            this.showMsgToUser(\"🙊🙈🙉 Get a new achievement.\", this.successStatus);\r\n            achievementImg.show(\"slow\");\r\n            $(\"#events-section\").animate({scrollTop: 0}, \"fast\")\r\n        }\r\n    }\r\n\r\n    static getMsgWithTime(msg) {\r\n        return `${new Date().toLocaleTimeString()} : ${msg}`;\r\n    }\r\n\r\n    eventHappen() {\r\n        // FOR TEST\r\n        // this.eventMap.get(9)();\r\n\r\n        let eventDiversity = +this.configManager.currentPopulation > 20 ? this.eventMap.size : 1;\r\n        this.eventMap.get(EventManager.getRandomInt(eventDiversity))();\r\n    }\r\n\r\n    nothingHappenEvent() {\r\n        // this.showEventMsgToUser(\"ok\");\r\n        $(\"#audio-ok\")[0].play();\r\n        this.showMsgToUser(\"Everything is ok. Let s relax. ☕\", this.successStatus);\r\n    }\r\n\r\n    ufoEvent() {\r\n        $(\"#audio-ufo\")[0].play();\r\n        let farmerQuantity = +this.configManager.farmer;\r\n        if (this.hiddenButtons.length) {\r\n            this.pageManager.showElement([this.hiddenButtons.pop()]);\r\n            // this.showEventMsgToUser(\"ufo gave an useful artifact\");\r\n            this.showMsgToUser(\"`🛸 Ufo gives a mighty artifact and your people made a new button from it.&#128526&#128526`\", this.successStatus);\r\n        } else if (farmerQuantity > 25) {\r\n            switch (EventManager.getRandomInt(3)) {\r\n                case 1:\r\n                    let killedFarmerQuantity = Math.round(0.1 * farmerQuantity);\r\n                    // this.showEventMsgToUser(\"ufo killed\", killedFarmerQuantity);\r\n                    this.showMsgToUser(`🛸 Ufo Aliens tried to improve your human beings, but it wasn't successful. Unfortunately they killed: ${killedFarmerQuantity} of your farmers. Maybe in the next time.`,\r\n                        this.dangerStatus);\r\n                    for (let i = 0; i < killedFarmerQuantity; i++) {\r\n                        this.citizenManager.killFarmer();\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    // this.showEventMsgToUser(\"nightmare\");\r\n                    this.showMsgToUser(\"👩‍🌾👩‍🌾  Your farmers said that they saw strange nightmares. 👾👾\", this.primaryStatus);\r\n                    break;\r\n                case 3:\r\n                    let newResources = Math.round(0.6 * +this.configManager.stone);\r\n                    // this.showEventMsgToUser(\"ufo gave an artifact\", newResources);\r\n                    this.showMsgToUser(`🛸 Ufo gave to you a mighty artifact, but your people don't know how to apply this and they just exchanged it with more advanced civilization for: ${newResources} stones.`,\r\n                        this.successStatus);\r\n                    this.configManager.stone.changeValue(newResources);\r\n                    break;\r\n            }\r\n        } else {\r\n            // this.showEventMsgToUser(\"strange in the skies\");\r\n            this.showMsgToUser(`👩‍🌾👩‍🌾 Your farmers said that they saw something strange in the skies. You said - ha, rich imagination`,\r\n                this.primaryStatus);\r\n        }\r\n    }\r\n\r\n    farmerEvent() {\r\n        $(\"#audio-farmer\")[0].play();\r\n        let farmerQuantity = +this.configManager.farmer;\r\n\r\n        let foodQuantity = +this.configManager.food;\r\n        let changes;\r\n        switch (EventManager.getRandomInt(5)) {\r\n            case 1:\r\n                this.configManager.food.changeValue(Math.round(foodQuantity * 1.8));\r\n                // this.showEventMsgToUser(\"potatoes\", Math.round(foodQuantity * 1.8));\r\n                this.showMsgToUser(`👩‍🌾👩‍🌾 Farmers found ${Math.round(foodQuantity * 1.8)} potatoes.🥔🥔🥔🥔`, this.successStatus);\r\n                break;\r\n            case 2:\r\n                for (let i = 0, amount = Math.round(farmerQuantity * 0.15); i < amount; i++) {\r\n                    this.citizenManager.killFarmer();\r\n                }\r\n                // this.showEventMsgToUser(\"assassin rabbits\", Math.round(this.getRandomInt(farmerQuantity) * 0.15));\r\n                this.showMsgToUser(`🐰🐰🐰 Obviously it was bad decision to take rabbit's food. Assassin rabbits killed : ${Math.round(EventManager.getRandomInt(farmerQuantity) * 0.15)} farmers.`,\r\n                    this.dangerStatus);\r\n                break;\r\n            case 3:\r\n                // this.showEventMsgToUser(\"wild rabbits\");\r\n                this.showMsgToUser(\"🐰🐰🐰 Farmers saw the wild rabbits.\", this.primaryStatus);\r\n                break;\r\n            case 4:\r\n                changes = Math.round(foodQuantity * 2.5);\r\n                this.configManager.food.changeValue(changes);\r\n                // this.showEventMsgToUser(\"kiwi\", Math.round(foodQuantity * 2.5));\r\n                this.showMsgToUser(`👩‍🌾👩‍🌾 Farmers found ${changes} kiwi fruits.🥝🥝🥝🥝`, this.successStatus);\r\n                break;\r\n            case 5:\r\n                changes = -Math.round(foodQuantity * 0.9);\r\n                this.configManager.food.changeValue(changes);\r\n                // this.showEventMsgToUser(\"rats\", Math.round(foodQuantity * 0.9));\r\n                this.showMsgToUser(`🐀🐀🐀 Rats ate ${changes} of your food.`, this.dangerStatus);\r\n                break;\r\n        }\r\n    }\r\n\r\n    weatherEvent() {\r\n        $(\"#audio-weather\")[0].play();\r\n        // TODO add illness\r\n        let woodQuantity = +this.configManager.wood;\r\n        switch (EventManager.getRandomInt(2)) {\r\n            // Storm\r\n            case 1:\r\n                if (woodQuantity > 20) {\r\n                    let lostWoodQuantity = Math.round(woodQuantity * 0.3);\r\n                    this.configManager.wood.changeValue(-lostWoodQuantity);\r\n                    // this.showEventMsgToUser(\"storm\", lostWoodQuantity);\r\n                    this.showMsgToUser(`⛈️There is a storm. It spoiled some of your wood: ${lostWoodQuantity} is lost.`, this.dangerStatus);\r\n                } else {\r\n                    // this.showEventMsgToUser(\"small rain\");\r\n                    this.showMsgToUser(\"🌈 There was a small rain.\", this.primaryStatus);\r\n                }\r\n                break;\r\n            // Earthquake\r\n            case 2:\r\n                switch (EventManager.getRandomInt(2)) {\r\n                    case 1:\r\n                        let minerQuantity = +this.configManager.miner;\r\n                        if (minerQuantity > 7) {\r\n                            let killedMinerQuantity = Math.round(0.3 * minerQuantity);\r\n                            for (let i = 0, amount = killedMinerQuantity; i < amount; i++) {\r\n                                this.citizenManager.killMiner();\r\n                            }\r\n                            // this.showEventMsgToUser(\"big earthquake\", killedMinerQuantity);\r\n                            this.showMsgToUser(`🧶 ☹ There was a big earthquake. Unfortunately it killed: ${killedMinerQuantity} of your miners.`, this.dangerStatus);\r\n                        } else {\r\n                            let newResourceQuantity = Math.round(0.33 * +this.configManager.woodStorage);\r\n                            this.configManager.wood.changeValue(newResourceQuantity);\r\n                            // this.showEventMsgToUser(\"middle earthquake\", newResourceQuantity);\r\n                            this.showMsgToUser(`🧶️ There was a middle earthquake. Some trees were down and it gave you : ${newResourceQuantity} woods.`, this.successStatus);\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        // this.showEventMsgToUser(\"light earthquake\");\r\n                        this.showMsgToUser(\"🧶 There was a light earthquake.\", this.primaryStatus);\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    wildAmazonEvent() {\r\n        $(\"#audio-amazon\")[0].play();\r\n        let scientistQuantity = +this.configManager.scientist;\r\n        if (scientistQuantity > 10) {\r\n            switch (EventManager.getRandomInt(3)) {\r\n                case 1:\r\n                    // this.showEventMsgToUser(\"amazons speaking\");\r\n                    this.showMsgToUser(\"👧👧👧 Your people communicated a bit with Amazons.\", this.primaryStatus);\r\n                    break;\r\n                case 2:\r\n                    let killedScientistQuantity = Math.round(0.5 * scientistQuantity);\r\n                    for (let i = 0, amount = killedScientistQuantity; i < amount; i++) {\r\n                        this.citizenManager.killScientist();\r\n                    }\r\n                    this.configManager.knowledge.changeValue(-+this.configManager.knowledge * 0.5);\r\n                    // this.showEventMsgToUser(\"amazons kidnapped\", killedScientistQuantity);\r\n                    this.showMsgToUser(`👧👧👧👧 Wild Amazons kidnapped some of your people. Than they brought ${killedScientistQuantity} male corpses back, you see smiles on corpse's faces.`,\r\n                        this.dangerStatus);\r\n                    break;\r\n                case 3:\r\n                    let newMaleQuantity = Math.round(0.25 * scientistQuantity);\r\n                    this.citizenManager.addCitizen(newMaleQuantity);\r\n                    // this.showEventMsgToUser(\"amazons brought\", newMaleQuantity);\r\n                    this.showMsgToUser(`👧👧👧👧 Amazons brought a few males to your people . ${newMaleQuantity} new free people.`, this.successStatus);\r\n                    break;\r\n            }\r\n        } else {\r\n            // this.showEventMsgToUser(\"amazons are there\");\r\n            this.showMsgToUser(\"People saw a lot of beautiful wild amazons 👧👧👧\", this.primaryStatus);\r\n        }\r\n    }\r\n\r\n    elfEvent() {\r\n        $(\"#audio-elf\")[0].play();\r\n        switch (EventManager.getRandomInt(2)) {\r\n            case 1:\r\n                let woodQuantity = Math.floor(+this.configManager.wood);\r\n                if (woodQuantity > 20) {\r\n                    this.configManager.wood.changeValue(-woodQuantity);\r\n                    // this.showEventMsgToUser(\"elves can't cut trees\", woodQuantity);\r\n                    this.showMsgToUser(`🧝🧝 Elves can't cut trees, so sometimes they take it from the others. They said - THANK YOU. And took: ${woodQuantity} of your wood.`,\r\n                        this.dangerStatus);\r\n                } else {\r\n                    // this.showEventMsgToUser(\"elves are disappointed\");\r\n                    this.showMsgToUser(\"🧝🧝 You don t have wood. Elves are disappointed of us.. :((\", this.primaryStatus);\r\n                }\r\n                break;\r\n            case 2:\r\n                if (+this.configManager.woodman > 7) {\r\n                    let killedWoodmanQuantity = Math.floor(+this.configManager.woodman * 0.9);\r\n                    for (let i = 0; i < killedWoodmanQuantity; i++) {\r\n                        this.citizenManager.killWoodcutter();\r\n                    }\r\n                    // this.showEventMsgToUser(\"elves don't like\", killedWoodmanQuantity);\r\n                    this.showMsgToUser(`🧝🧝 Elves don't like when you cut trees. They killed: ${killedWoodmanQuantity} of your woodcutters. They said - sorry.`,\r\n                        this.dangerStatus);\r\n                } else {\r\n                    // this.showEventMsgToUser(\"elves like\");\r\n                    this.showMsgToUser(\"🧝🧝 Main Elf said - we like you.\", this.primaryStatus);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    bloodMoonEvent() {\r\n        $(\"#audio-blood-moon\")[0].play();\r\n        let corpseQuantity = +this.configManager.corpse;\r\n        if (corpseQuantity) {\r\n            switch (EventManager.getRandomInt(2)) {\r\n                case 1:\r\n                    // this.showEventMsgToUser(\"overturned corpses\");\r\n                    this.showMsgToUser(\"🧑🧑 Your people said that corpses overturned during the last full moon night. You said - ha, rich imagination\",\r\n                        this.warningStatus);\r\n                    break;\r\n                case 2:\r\n                    let zombieQuantity = Math.round(EventManager.getRandomInt(corpseQuantity) / 2);\r\n                    switch (EventManager.getRandomInt(2)) {\r\n                        case 1:\r\n                            if (zombieQuantity) {\r\n                                let killedCitizenQuantity = +this.configManager.currentPopulation > zombieQuantity ? zombieQuantity : +this.configManager.currentPopulation;\r\n                                for (let i = 0; i < killedCitizenQuantity; i++) {\r\n                                    this.citizenManager.findPersonToKill();\r\n                                }\r\n                                // this.showEventMsgToUser(\"white walker killed\");\r\n                                this.showMsgToUser(\"🧛🧛 Some zombies woke up and killed a few of your people. Than they went back. You have more corpses.\"\r\n                                    , this.dangerStatus);\r\n                                if (!+this.configManager.currentPopulation) {\r\n                                    setTimeout(() => {\r\n                                        // this.eventManager.showEventMsgToUser(\"death because of zombies\");\r\n                                        this.showMsgToUser(\"🌘🧛 You people died because of too many zombies.\", this.dangerStatus);\r\n                                        $(\"#zombie-apocalypse-modal\").modal();\r\n                                        this.pageManager.startAgainButton.show(\"slow\");\r\n                                    }, 500);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            // this.showEventMsgToUser(\"white walkers in another village\", zombieQuantity);\r\n                            this.showMsgToUser(`🧛🧛 ${zombieQuantity} corpses woke up and went to another village. Than they went back to you to sleep.`,\r\n                                this.warningStatus);\r\n                            break;\r\n                    }\r\n            }\r\n        } else {\r\n            // this.showEventMsgToUser(\"fool moon\");\r\n            this.showMsgToUser(\"Your people like fool moon this night 🌘\", this.primaryStatus);\r\n        }\r\n    }\r\n\r\n    birthDeathCycleEvent() {\r\n        $(\"#audio-birth-cycle\")[0].play();\r\n        let changeQuantity = Math.floor(EventManager.getRandomInt(+this.configManager.currentPopulation) * 0.2);\r\n        if (changeQuantity) {\r\n            switch (EventManager.getRandomInt(2)) {\r\n                case 1:\r\n                    this.citizenManager.addCitizen(changeQuantity);\r\n                    // this.showEventMsgToUser(\"new people were born\", changeQuantity);\r\n                    this.showMsgToUser(`👪👪 ${changeQuantity} new people were born.`, this.successStatus);\r\n                    break;\r\n                case 2:\r\n                    for (let i = 0; i < changeQuantity; i++) {\r\n                        this.citizenManager.findPersonToKill();\r\n                    }\r\n                    // this.showEventMsgToUser(\"died because of age\", changeQuantity);\r\n                    this.showMsgToUser(`👪👪 ${changeQuantity} died because of disease.`, this.dangerStatus);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    scoutEvent() {\r\n        let who = $(\"input[name='scoutOption']:checked\").val();\r\n        switch (who) {\r\n            case \"around\":\r\n                switch (EventManager.getRandomInt(2)) {\r\n                    case 1:\r\n                        let changes = EventManager.getRandomInt(Math.floor(+this.configManager.knowledge/3));\r\n                        this.configManager.knowledge.changeValue(changes);\r\n                        // this.showEventMsgToUser(\"better knowledge land\", changes);\r\n                        this.showMsgToUser(`Now your people know their land better. 🐾 🗺 Your people get ${changes} knowledge because of scouts.`, this.successStatus);\r\n                        break;\r\n                    case 2:\r\n                        if (this.hiddenLands.length) {\r\n                            this.hiddenLands.pop().css(\"display\", 'inline-flex');\r\n                            // this.showEventMsgToUser(\"new lands\");\r\n                            this.showMsgToUser(`Your scouts found a new race, now you can scout them 🐾🐾🐾 🗺 .`, this.successStatus);\r\n\r\n                            if (!this.hiddenLands.length) {\r\n                                this.pageManager.unknownRadioButton.hide(\"slow\");\r\n                            }\r\n                        } else {\r\n                            // TODO Found nothing\r\n                        }\r\n                        break;\r\n                    // TODO some of your scouts have been lost.\r\n                }\r\n                break;\r\n            default:\r\n                this.generateFoundPlace(who);\r\n                break;\r\n        }\r\n    }\r\n\r\n    petsEvent() {\r\n        $(\"#audio-pet\")[0].play();\r\n        let catQuantity = +this.configManager.cat;\r\n        if (catQuantity) {\r\n            let changes = EventManager.getRandomInt(catQuantity) * 2;\r\n            this.configManager.cat.changeValue(changes);\r\n            this.configManager.foodTotalProduction.changeValue(-changes * 0.1);\r\n            this.configManager.catTotalConsumption.changeValue(-changes * 0.1);\r\n\r\n            this.showMsgToUser(\"Your cats bred a bit. You have more beautiful kittens. 🐈🐈🐈\", this.warningStatus);\r\n        } else {\r\n            this.showMsgToUser(\"Your people saw beautiful cats walking around.🐈🐈\", this.primaryStatus);\r\n        }\r\n    }\r\n\r\n    generateFoundPlace(who) {\r\n        let text = this.generatePlaceName(who);\r\n        this.generateButton(text);\r\n    }\r\n\r\n    generatePlaceName(who) {\r\n        let random = EventManager.getRandomInt(100);\r\n        // 3 types\r\n        let text = who.includes(\"dragon\") ? \"small cave\" : \"village\";\r\n        if (random < 6) {\r\n            text = who.includes(\"dragon\") ? \"big cave\" : \"palace\";\r\n        } else if (random < 25) {\r\n            text = who.includes(\"dragon\") ? \"middle cave\" : \"city\";\r\n        }\r\n        who = who.includes(\"dragon\") ? \"\" : who;\r\n\r\n        text = `${who} ${text}`.trim();\r\n        text = `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\r\n\r\n        return text;\r\n    }\r\n\r\n    generateButton(text) {\r\n        if ($(\"#attack-div button\").length > 3) {\r\n            let element = $(\"#attack-div button\").last();\r\n            element.hide(\"slow\", () => {\r\n                element.remove();\r\n            });\r\n        }\r\n        let newElement = `<button class=\"btn btn-dark\" style=\"display: none\">${text}</button>`;\r\n        $(\"#attack-div br\").after(newElement);\r\n        $(\"#attack-div button\").first().show(\"slow\");\r\n    }\r\n\r\n    noBattleResultEvent(who) {\r\n        switch (who.split(\" \")[0]) {\r\n            case \"Amazon\":\r\n                switch (EventManager.getRandomInt(3)) {\r\n                    case 1:\r\n                        // you army joined to beautiful amazon\r\n                        this.configManager.warrior.setValue(0);\r\n                        // this.showEventMsgToUser(\"your army left\");\r\n                        this.showMsgToUser(`Instead of attack your army joined to the beautiful amazons.`, this.warningStatus);\r\n                        break;\r\n                    case 2:\r\n                    case 3:\r\n                        // N amazons join to your army.\r\n                        // this.showEventMsgToUser(\"amazons join\", EventManager.getRandomInt(+this.configManager.warrior * 0.65));\r\n                        let changes = EventManager.getRandomInt(Math.floor(+this.configManager.warrior * 0.9));\r\n                        // TODO maybe change from citizen to warriors\r\n                        this.citizenManager.addCitizen(changes);\r\n                        this.showMsgToUser(`Amazons like your people, ${changes} amazons joined to you.`);\r\n                        break;\r\n                }\r\n                break;\r\n            case \"Human\":\r\n                // this.showEventMsgToUser(\"attack human\", EventManager.getRandomInt(+this.configManager.currentPopulation * 0.5));\r\n                let changes = EventManager.getRandomInt(Math.floor(+this.configManager.currentPopulation * 0.5));\r\n                for (let i = 0; i < changes; i++) {\r\n                    this.citizenManager.findPersonToKill();\r\n                }\r\n                this.showMsgToUser(`Enemy had the high walls, you couldn't get in. After your attack at the other human beings, they attacked you back and killed ${changes} of your people.`,\r\n                    this.dangerStatus);\r\n                break;\r\n            case \"Ufo\":\r\n                this.configManager.knowledge.setValue(0);\r\n                // this.showEventMsgToUser(\"attack ufo\");\r\n                this.showMsgToUser(`You warriors feared to attack this mighty civilization. After your attack at Ufo, they takes some of your knowledge.`, this.warningStatus);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // TODO finish this\r\n    battleResultEvent(who, win) {\r\n        if (win) {\r\n            let changes;\r\n            switch (who.split(\" \")[0]) {\r\n                case \"Orc\":\r\n                    if (who.includes(\"village\")) {\r\n                        changes = EventManager.getRandomInt(150) + 10;\r\n                    } else if (who.includes(\"city\")) {\r\n                        changes = EventManager.getRandomInt(1500) + 200;\r\n                    } else {\r\n                        //    TODO finish this section;\r\n                    }\r\n                    this.configManager.wood.changeValue(changes);\r\n                    this.showMsgToUser(`You won the battle with the orcs and got ${changes} of wood.`, this.successStatus);\r\n                    break;\r\n                case \"Sparta\":\r\n                    this.showMsgToUser(`You win the battle and can be proud of yourself.`, this.successStatus);\r\n                    break;\r\n                //    TODO add dragon eggs\r\n                case \"Small\":\r\n                case \"Middle\":\r\n                case \"Big\":\r\n                    changes = 0;\r\n                    if (who.includes(\"Small\")) {\r\n                        changes = EventManager.getRandomInt(1500) + 10;\r\n                    } else if (who.includes(\"Middle\")) {\r\n                        changes = EventManager.getRandomInt(15000) + 200;\r\n                    } else {\r\n                        //    TODO finish this section;\r\n                    }\r\n                    // TODO add eggs\r\n                    let dragonEggQuantity = Math.floor(changes / 100) + 1;\r\n                    this.configManager.dragon.changeValue(dragonEggQuantity);\r\n                    this.configManager.foodTotalProduction.changeValue(-dragonEggQuantity * 2);\r\n                    this.configManager.dragonTotalConsumption.changeValue(-dragonEggQuantity * 2);\r\n                    this.showMsgToUser(`You won dragons, got their gold, gems and other treasures. Summary you got ${changes} of gold. Also you've found ${dragonEggQuantity} newborn dragons.`, this.successStatus);\r\n                    break;\r\n                case \"Dwarf\":\r\n                    changes = 0;\r\n                    if (who.includes(\"village\")) {\r\n                        changes = EventManager.getRandomInt(150) + 10;\r\n                    } else if (who.includes(\"city\")) {\r\n                        changes = EventManager.getRandomInt(1500) + 200;\r\n                    } else {\r\n                        //    TODO finish this section;\r\n                    }\r\n                    this.configManager.stone.changeValue(changes);\r\n                    this.showMsgToUser(`You won the battle with the dwarves and got ${changes} of stone.`, this.successStatus);\r\n                    break;\r\n                case \"Elf\":\r\n                    let catQuantity = EventManager.getRandomInt(15);\r\n                    this.configManager.cat.changeValue(catQuantity);\r\n                    this.configManager.foodTotalProduction.changeValue(-catQuantity * 0.1);\r\n                    this.configManager.catTotalConsumption.changeValue(-catQuantity * 0.1);\r\n                    this.showMsgToUser(`Elves had a lot of different resources and artifacts, but your warriors got craziness and burnt every useful stuff. But you've taken ${catQuantity} kittens from them.`\r\n                        , this.successStatus);\r\n                    break;\r\n            }\r\n        } else {\r\n            this.showMsgToUser(`You lost the battle, enemies were stronger.`, this.dangerStatus);\r\n        }\r\n    }\r\n\r\n    static getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max)) + 1;\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (EventManager);\n\n//# sourceURL=webpack:///./src/eventManager.js?");

/***/ }),

/***/ "./src/gameManager.js":
/*!****************************!*\
  !*** ./src/gameManager.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _eventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventManager */ \"./src/eventManager.js\");\n/* harmony import */ var _configManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./configManager */ \"./src/configManager.js\");\n/* harmony import */ var _builderManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./builderManager */ \"./src/builderManager.js\");\n/* harmony import */ var _pageManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pageManager */ \"./src/pageManager.js\");\n/* harmony import */ var _citizenManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./citizenManager */ \"./src/citizenManager.js\");\n/* harmony import */ var _scienceManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scienceManager */ \"./src/scienceManager.js\");\n/* harmony import */ var _intervalManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./intervalManager */ \"./src/intervalManager.js\");\n/* harmony import */ var _warManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./warManager */ \"./src/warManager.js\");\n/* harmony import */ var _loaderManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./loaderManager */ \"./src/loaderManager.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GameManager {\r\n    constructor() {\r\n        this.pageManager = new _pageManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n        this.eventManager = new _eventManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n        this.configManager = new _configManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n        this.builderManager = new _builderManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        this.citizenManager = new _citizenManager__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n        this.scienceManager = new _scienceManager__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\r\n        this.intervalManager = new _intervalManager__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\r\n        this.warManager = new _warManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\r\n        this.loaderManager = new _loaderManager__WEBPACK_IMPORTED_MODULE_8__[\"default\"]();\r\n\r\n        this.pageManager.initialization(this);\r\n        this.eventManager.initialization(this);\r\n        this.configManager.initialization(this);\r\n        this.builderManager.initialization(this);\r\n        this.citizenManager.initialization(this);\r\n        this.scienceManager.initialization(this);\r\n        this.intervalManager.initialization(this);\r\n        this.warManager.initialization(this);\r\n        this.loaderManager.initialization(this);\r\n    }\r\n\r\n    startGame() {\r\n        this.loaderManager.checkSavedGame();\r\n\r\n        // this.runMainMenuModal();\r\n        this.pageManager.runMainMenuModal();\r\n    }\r\n\r\n    createWorker(quantity) {\r\n        return this.citizenManager.tryToCreateCitizen(quantity);\r\n    }\r\n\r\n    setWorker(workType, quantity) {\r\n        return this.citizenManager.setCitizenToWork(workType, quantity);\r\n    }\r\n\r\n    build(buildingType) {\r\n        $(\"#audio-build\")[0].play();\r\n        return this.builderManager.buildNewBuilding(buildingType);\r\n    }\r\n\r\n    research(name) {\r\n        $(\"#audio-tech\")[0].play();\r\n        return this.scienceManager.research(name);\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameManager);\n\n//# sourceURL=webpack:///./src/gameManager.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gameManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameManager */ \"./src/gameManager.js\");\n/* harmony import */ var _pageManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pageManager */ \"./src/pageManager.js\");\n\r\n\r\n\r\n$(function () {\r\n    \"use strict\";\r\n    let gameManager = new _gameManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    let pageManager = gameManager.pageManager;\r\n\r\n    initClickEvent();\r\n\r\n    $('#change-ui-button').on(\"click\", ()=>{\r\n        pageManager.changeUI();\r\n    });\r\n    $('#unchange-ui-button').on(\"click\", ()=>{\r\n        pageManager.unChangeUI();\r\n    });\r\n\r\n    $('*').hover(\r\n        function () {\r\n            $(this).removeClass('highlight');\r\n        }\r\n    );\r\n\r\n    gameManager.startGame();\r\n\r\n    $(\"#get-warriors-button\").on(\"click\", () => {\r\n        gameManager.configManager.warrior.changeValue(50);\r\n    });\r\n\r\n    $(\"button\").on(\"click\", (e)=> {\r\n        e.target.blur();\r\n    });\r\n\r\n    function initClickEvent() {\r\n        $(\"#get-100-w\").on(\"click\", ()=>{\r\n            gameManager.configManager.warriorStorage.changeValue(100);\r\n            gameManager.configManager.warrior.changeValue(100);\r\n        });\r\n        $(\"#get-1k-n\").on(\"click\", ()=>{\r\n            gameManager.configManager.knowledgeStorage.changeValue(1000);\r\n            gameManager.configManager.knowledge.changeValue(1000);\r\n        });\r\n        initResourceClickEvent();\r\n        initSettingsClickEvent();\r\n        initCreateCitizenClickEvent();\r\n        initBuildingClickEvent();\r\n        initJobClickEvent();\r\n        // SCOUT\r\n        pageManager.scoutRadioButtons.on(\"click\", () => {\r\n            pageManager.scoutProgressBar.css(\"width\", 0 + \"%\").attr('aria-valuenow', 0);\r\n        });\r\n        // ATTACK\r\n        pageManager.attackDiv.on(\"click\", (event) => gameManager.warManager.attackEvent(event));\r\n\r\n        initClickResearchButtonEvent();\r\n    }\r\n\r\n    function initResourceClickEvent() {\r\n        pageManager.foodClickButton.on(\"click\", () => pageManager.clickResourceButton(gameManager.configManager.food, gameManager.configManager.clickEfficiency));\r\n        pageManager.woodClickButton.on(\"click\", () => pageManager.clickResourceButton(gameManager.configManager.wood, gameManager.configManager.clickEfficiency));\r\n        pageManager.stoneClickButton.on(\"click\", () => pageManager.clickResourceButton(gameManager.configManager.stone, gameManager.configManager.clickEfficiency));\r\n    }\r\n\r\n    function initSettingsClickEvent() {\r\n        pageManager.getFullButton.on(\"click\", () => gameManager.configManager.getFullResources());\r\n        pageManager.startAgainButton.on(\"click\", () => _pageManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].reloadSite());\r\n        pageManager.pauseButton.on(\"click\", () => pageManager.pause());\r\n\r\n        pageManager.mainMenuLoadButton.on(\"click\", () => gameManager.loaderManager.loadGameFromMenu());\r\n        pageManager.loadButton.on(\"click\", () => gameManager.loaderManager.loadGame());\r\n        pageManager.saveButton.on(\"click\", () => gameManager.loaderManager.saveGame());\r\n    }\r\n\r\n    function initCreateCitizenClickEvent() {\r\n        pageManager.createCitizenButton.on(\"click\", () => gameManager.createWorker(1));\r\n        pageManager.create10CitizenButton.on(\"click\", () => {\r\n            for (let i = 0; i < 10; i++) {\r\n                if (!gameManager.createWorker(1)) {\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        pageManager.createMaxCitizenButton.on(\"click\", () => {\r\n            for (let i = 0, quantity = Math.floor(gameManager.configManager.food / gameManager.configManager.citizenCost); i < quantity; i++) {\r\n                if (!gameManager.createWorker(1)) {\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function initBuildingClickEvent() {\r\n        // Storage\r\n        pageManager.buildGraveButton.on(\"click\", () => gameManager.build(\"grave\"));\r\n        pageManager.buildGraveyardButton.on(\"click\", () => gameManager.build(\"graveyard\"));\r\n        pageManager.buildScrollButton.on(\"click\", () => gameManager.build(\"scroll\"));\r\n        pageManager.buildGranaryButton.on(\"click\", () => gameManager.build(\"granary\"));\r\n        pageManager.buildPitButton.on(\"click\", () => gameManager.build(\"pit\"));\r\n        // Houses\r\n        pageManager.buildTentButton.on(\"click\", () => gameManager.build(\"tent\"));\r\n        pageManager.buildHutButton.on(\"click\", () => gameManager.build(\"hut\"));\r\n        pageManager.buildDuplexButton.on(\"click\", () => gameManager.build(\"duplex\"));\r\n        // Science\r\n        pageManager.buildCampfireButton.on(\"click\", () => gameManager.build(\"campfire\"));\r\n        pageManager.buildDolmenButton.on(\"click\", () => gameManager.build(\"dolmen\"));\r\n        pageManager.buildParthenonButton.on(\"click\", () => gameManager.build(\"parthenon\"));\r\n        pageManager.buildLibraryButton.on(\"click\", () => gameManager.build(\"library\"));\r\n        // Health/Happiness\r\n        pageManager.buildMusicClubButton.on(\"click\", () => gameManager.build(\"music-club\"));\r\n        pageManager.buildYogaClubButton.on(\"click\", () => gameManager.build(\"yoga-club\"));\r\n        pageManager.buildPalaceButton.on(\"click\", () => gameManager.build(\"palace\"));\r\n        // War\r\n        pageManager.buildArmoryButton.on(\"click\", () => gameManager.build(\"armory\"));\r\n        pageManager.buildBarrackButton.on(\"click\", () => gameManager.build(\"barrack\"));\r\n    }\r\n\r\n    function initJobClickEvent() {\r\n        // LEADER\r\n        pageManager.addLeaderButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.leader, 1));\r\n        // FARMER\r\n        pageManager.removeAllFarmerButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.farmer, gameManager.configManager.farmer, false));\r\n        pageManager.remove10FarmerButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.farmer, false));\r\n        pageManager.removeFarmerButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.farmer, -1));\r\n        pageManager.addFarmerButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.farmer, 1));\r\n        pageManager.add10FarmerButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.farmer, true));\r\n        pageManager.addMaxFarmerButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.lazybones, gameManager.configManager.farmer, true));\r\n        // WOODCUTTER\r\n        pageManager.removeAllWoodmanButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.woodman, gameManager.configManager.woodman, false));\r\n        pageManager.remove10WoodmanButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.woodman, false));\r\n        pageManager.removeWoodmanButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.woodman, -1));\r\n        pageManager.addWoodmanButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.woodman, 1));\r\n        pageManager.add10WoodmanButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.woodman, true));\r\n        pageManager.addMaxWoodmanButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.lazybones, gameManager.configManager.woodman, true));\r\n        // MINER\r\n        pageManager.removeAllMinerButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.miner, gameManager.configManager.miner, false));\r\n        pageManager.remove10MinerButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.miner, false));\r\n        pageManager.removeMinerButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.miner, -1));\r\n        pageManager.addMinerButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.miner, 1));\r\n        pageManager.add10MinerButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.miner, true));\r\n        pageManager.addMaxMinerButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.lazybones, gameManager.configManager.miner, true));\r\n        // SCIENTIST\r\n        pageManager.removeAllScientistButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.scientist, gameManager.configManager.scientist, false));\r\n        pageManager.remove10ScientistButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.scientist, false));\r\n        pageManager.removeScientistButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.scientist, -1));\r\n        pageManager.addScientistButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.scientist, 1));\r\n        pageManager.add10ScientistButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.scientist, true));\r\n        pageManager.addMaxScientistButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.lazybones, gameManager.configManager.scientist, true));\r\n        // Writer\r\n        pageManager.addWriterButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.writer, 1));\r\n        // FUNERAL\r\n        pageManager.removeFuneralButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.funeral, -2));\r\n        pageManager.addFuneralButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.funeral, 2));\r\n        // Dj\r\n        pageManager.addDjButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.dj, 1));\r\n        // Instructor\r\n        pageManager.addInstructorButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.instructor, 1));\r\n        // Weapon master\r\n        pageManager.removeWeaponMasterButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.weaponMaster, -1));\r\n        pageManager.addWeaponMasterButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.weaponMaster, 1));\r\n        // SCOUT\r\n        pageManager.removeAllScoutButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.scout, gameManager.configManager.scout, false));\r\n        pageManager.remove10ScoutButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.scout, false));\r\n        pageManager.removeScoutButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.scout, -1));\r\n        pageManager.addScoutButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.scout, 1));\r\n        pageManager.add10ScoutButton.on(\"click\", () => repeatSetWorker(10, gameManager.configManager.scout, true));\r\n        pageManager.addMaxScoutButton.on(\"click\", () => repeatSetWorker(+gameManager.configManager.lazybones, gameManager.configManager.scout, true));\r\n        // WARRIOR\r\n        pageManager.addWarriorButton.on(\"click\", () => gameManager.setWorker(gameManager.configManager.warrior, 1));\r\n\r\n        function repeatSetWorker(repeatAmount, workerType, increase) {\r\n            let quantity = increase ? 1 : -1;\r\n            for (let i = 0; i < repeatAmount; i++) {\r\n                if (!gameManager.setWorker(workerType, quantity)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function initClickResearchButtonEvent() {\r\n        // BEGINNING\r\n        pageManager.researchChangesButton.on(\"click\", () => gameManager.research(\"changes\"));\r\n        // CHANGES 1\r\n        pageManager.researchAgricultureButton.on(\"click\", () => gameManager.research(\"agriculture\"));\r\n        pageManager.researchArchitectureButton.on(\"click\", () => gameManager.research(\"architecture\"));\r\n        pageManager.researchFuneralButton.on(\"click\", () => gameManager.research(\"funeral\"));\r\n        // CHANGES 2\r\n        pageManager.researchChanges2Button.on(\"click\", () => gameManager.research(\"changes2\"));\r\n        pageManager.researchLeadershipButton.on(\"click\", () => gameManager.research(\"leadership\"));\r\n        pageManager.researchAgriculture2Button.on(\"click\", () => gameManager.research(\"agriculture2\"));\r\n        pageManager.researchArchitecture2Button.on(\"click\", () => gameManager.research(\"architecture2\"));\r\n        // STONE AGE\r\n        pageManager.researchStoneAgeButton.on(\"click\", () => gameManager.research(\"stone age\"));\r\n        pageManager.researchArchitecture3Button.on(\"click\", () => gameManager.research(\"architecture3\"));\r\n        pageManager.researchMusicButton.on(\"click\", () => gameManager.research(\"music\"));\r\n        pageManager.researchSportButton.on(\"click\", () => gameManager.research(\"sport\"));\r\n        pageManager.researchToolButton.on(\"click\", () => gameManager.research(\"tool\"));\r\n        pageManager.researchWeaponButton.on(\"click\", () => gameManager.research(\"weapon\"));\r\n        pageManager.researchHoeButton.on(\"click\", () => gameManager.research(\"hoe\"));\r\n        pageManager.researchAxeButton.on(\"click\", () => gameManager.research(\"axe\"));\r\n        pageManager.researchPickaxeButton.on(\"click\", () => gameManager.research(\"pickaxe\"));\r\n        pageManager.research2sideScrollButton.on(\"click\", () => gameManager.research(\"2 side scroll\"));\r\n        pageManager.researchArchitecture4Button.on(\"click\", () => gameManager.research(\"architecture4\"));\r\n        // BRONZE AGE\r\n        pageManager.researchBronzeAgeButton.on(\"click\", () => gameManager.research(\"bronze age\"));\r\n        pageManager.researchWheelButton.on(\"click\", () => gameManager.research(\"wheel\"));\r\n        pageManager.researchAgriculture3Button.on(\"click\", () => gameManager.research(\"agriculture3\"));\r\n        pageManager.researchLeadership2Button.on(\"click\", () => gameManager.research(\"leadership2\"));\r\n        // TODO finish this part\r\n        pageManager.researchPackagingButton.on(\"click\", () => gameManager.research(\"packaging\"));\r\n        pageManager.researchScoutButton.on(\"click\", () => gameManager.research(\"scouting\"));\r\n        pageManager.researchArchitecture5Button.on(\"click\", () => gameManager.research(\"architecture5\"));\r\n        // TODO finish this part in the next age\r\n        pageManager.researchDomesticationButton.on(\"click\", () => gameManager.research(\"domestication\"));\r\n        pageManager.researchMysticismButton.on(\"click\", () => gameManager.research(\"mysticism\"));\r\n        pageManager.researchToolAgeButton.on(\"click\", () => gameManager.research(\"tool age\"));\r\n    }\r\n});\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/intervalManager.js":
/*!********************************!*\
  !*** ./src/intervalManager.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pageManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pageManager */ \"./src/pageManager.js\");\n// TODO move all logic of this class to game class or to somewhere else\r\n\r\n\r\nclass IntervalManager {\r\n    constructor() {\r\n        this.gameManager = null;\r\n        this.pageManager = null;\r\n        this.configManager = null;\r\n        this.eventManager = null;\r\n        this.citizenManager = null;\r\n\r\n        this.oneStepTime = 1e3;\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.citizenManager = this.gameManager.citizenManager;\r\n    }\r\n\r\n    runInterval() {\r\n        this.oneStep(this.oneStepTime);\r\n        this.events(this.oneStepTime * 30);\r\n        this.funeralProcess(this.oneStepTime * 5);\r\n        this.checkWinCondition(this.oneStepTime * 10);\r\n\r\n        this.writerInterval(this.oneStepTime * 5);\r\n\r\n        // TODO move from here, add flag\r\n        this.scouting(this.oneStepTime / 8);\r\n    }\r\n\r\n\r\n    oneStep(timeout) {\r\n        setInterval(() => {\r\n            // RESOURCES\r\n            // FOOD\r\n            this.configManager.food.changeValue(+this.configManager.foodTotalProduction);\r\n            // WOOD\r\n            let enoughWoodFlag = +this.configManager.wood + +this.configManager.woodTotalProduction >= 0;\r\n            if (enoughWoodFlag) {\r\n                this.configManager.wood.changeValue(+this.configManager.woodTotalProduction);\r\n            }\r\n            // STONE\r\n            let enoughStoneFlag = +this.configManager.stone + +this.configManager.stoneTotalProduction >= 0;\r\n            if (enoughStoneFlag) {\r\n                this.configManager.stone.changeValue(+this.configManager.stoneTotalProduction);\r\n            }\r\n            // KNOWLEDGE\r\n            this.configManager.knowledge.changeValue(+this.configManager.knowledgeTotalProduction);\r\n            // WEAPON\r\n            if (+this.configManager.weaponTotalProduction > 0) {\r\n                if (enoughWoodFlag && enoughStoneFlag) {\r\n                    this.configManager.weapon.changeValue(+this.configManager.weaponTotalProduction);\r\n                } else {\r\n                    this.eventManager.showMsgToUser(\"To produce weapon you need more wood or stones\", this.eventManager.warningStatus);\r\n                }\r\n            }\r\n\r\n            this.pageManager.checkHiddenTables();\r\n\r\n            // checkZombieApocalypse\r\n            if (+this.configManager.food < 0 && +this.configManager.cat && +this.configManager.currentPopulation < 20) {\r\n                $(\"#cat-apocalypse-modal\").modal();\r\n                this.pageManager.startAgainButton.show(\"slow\");\r\n            }\r\n\r\n            //starvation process\r\n            if (+this.configManager.food < 0 && +this.configManager.currentPopulation > 0) {\r\n                this.configManager.food.setValue(0);\r\n\r\n                this.eventManager.showEventMsgToUser(\"starvation\");\r\n                if (!this.configManager.starvationAchievementFlag) {\r\n                    this.eventManager.showAchievementToUser(\"Starvation\");\r\n                    this.configManager.starvationAchievementFlag = true;\r\n                }\r\n                this.pageManager.starvationWarning.show(\"slow\");\r\n\r\n                let deathQuantity = 1 + -Math.floor(+this.configManager.foodTotalProduction);\r\n                deathQuantity = deathQuantity > +this.configManager.currentPopulation ? +this.configManager.currentPopulation : deathQuantity;\r\n                deathQuantity = deathQuantity < 2 ? deathQuantity : Math.floor(deathQuantity / 2);\r\n                for (let i = 0; i < deathQuantity; i++) {\r\n                    this.citizenManager.findPersonToKill();\r\n                }\r\n\r\n                // Decrease quantity of happy\r\n                if (+this.configManager.currentHappyPeople > this.configManager.currentPopulation) {\r\n                    this.configManager.currentHappyPeople.changeValue(-deathQuantity);\r\n                }\r\n                // and healthy people\r\n                if (+this.configManager.currentHealthyPeople > this.configManager.currentPopulation) {\r\n                    this.configManager.currentHealthyPeople.changeValue(-deathQuantity);\r\n                }\r\n            } else {\r\n                this.pageManager.starvationWarning.hide(\"slow\");\r\n            }\r\n\r\n            // TODO add abundance of food\r\n            if (!this.configManager.productivityAchievementFlag && +this.configManager.productivity >= 190) {\r\n                this.eventManager.showAchievementToUser(\"Productivity\");\r\n                this.configManager.productivityAchievementFlag = true;\r\n            }\r\n\r\n            // TODO add more bad events when it isn't focus\r\n            // console.log(document.hasFocus());\r\n\r\n            $(\"#total-power-span\").text(+this.configManager.warrior);\r\n\r\n            this.pageManager.checkProduction();\r\n            this.pageManager.checkOverpopulated();\r\n        }, timeout);\r\n    }\r\n\r\n    checkWinCondition(timeout) {\r\n        setInterval(() => {\r\n            if (+this.configManager.knowledge >= this.configManager.WINNER_REQUIREMENTS) {\r\n                if (confirm(`${this.configManager.userName} are amazing! Congratulations! You collected a lot of knowledge!! \\nAlso you've killed: ${+this.configManager.corpse\r\n                + +this.configManager.inGraveQuantity} people. Great job\\n`)) {\r\n                    _pageManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reloadSite();\r\n                } else {\r\n                    this.configManager.knowledge.changeValue(-this.configManager.WINNER_REQUIREMENTS);\r\n                }\r\n            }\r\n        }, timeout);\r\n    }\r\n\r\n    funeralProcess(timeout) {\r\n        setInterval(() => {\r\n            let maxFuneral = Math.min.apply(null, [+this.configManager.corpseStorage - +this.configManager.inGraveQuantity,\r\n                +this.configManager.corpse, +this.configManager.funeral / 2]);\r\n            if (maxFuneral) {\r\n                for (let i = 0; i < maxFuneral; i++) {\r\n                    this.configManager.corpse.changeValue(-1);\r\n                    this.configManager.inGraveQuantity.changeValue(1);\r\n                }\r\n                $(this.pageManager.funeralProcessImg).show(\"slow\");\r\n            } else {\r\n                $(this.pageManager.funeralProcessImg).hide(\"slow\");\r\n            }\r\n        }, timeout);\r\n    }\r\n\r\n    events(timeout) {\r\n        setInterval(() => this.eventManager.eventHappen(), timeout);\r\n    }\r\n\r\n    // TODO move this from here\r\n    scouting(timeout) {\r\n        setInterval(() => {\r\n            if (+this.configManager.scout) {\r\n                let progress = +$(\"#scout-progress\").attr('aria-valuenow');\r\n                // progress += +this.configManager.scout / 8;\r\n                progress += +this.configManager.scout / 32;\r\n                if (progress > 100) {\r\n                    progress = 0;\r\n                    this.eventManager.scoutEvent();\r\n                }\r\n\r\n                $(\"#scout-progress\").attr('aria-valuenow', progress);\r\n                $(\"#scout-progress\").css(\"width\", progress + \"%\");\r\n            }\r\n        }, timeout);\r\n    }\r\n\r\n    writerInterval(timeout) {\r\n        setInterval(() => {\r\n            let writers = +this.configManager.writer;\r\n            if (writers) {\r\n                let stoneQuantity = +this.configManager.stone;\r\n                if (stoneQuantity >= 10) {\r\n                    let actualNewScrolls = writers * 10 <= stoneQuantity ? writers : Math.floor(stoneQuantity / writers);\r\n                    for (let i = 0; i < actualNewScrolls; i++) {\r\n                        this.gameManager.builderManager.buildNewBuilding(\"scroll\");\r\n                    }\r\n                } else {\r\n                    this.eventManager.showMsgToUser(\"Writer needs at least 10 stone to produce Scrolls\", this.eventManager.warningStatus);\r\n                }\r\n            }\r\n        }, timeout);\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (IntervalManager);\n\n//# sourceURL=webpack:///./src/intervalManager.js?");

/***/ }),

/***/ "./src/loaderManager.js":
/*!******************************!*\
  !*** ./src/loaderManager.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _eventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventManager */ \"./src/eventManager.js\");\n\r\n\r\nclass LoaderManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n\r\n        this.funnyPhrases = [\r\n            \"Adding Vanilla Flavor to Ice Giants\",\r\n            \"All races of Norrath will learn to work together\",\r\n            \"Attaching Beards to Dwarves\",\r\n            \"Creating Randomly Generated Feature\",\r\n            \"Delivering the Lion Meat to Halas\",\r\n            \"Doing The Impossible\",\r\n            \"Dusting Off Spellbooks\",\r\n            \"Ensuring Everything Works Perfektly\",\r\n            \"Ensuring Gnomes Are Still Short\",\r\n            \"If You Squeeze Dark Elves You Don't Get Wine\",\r\n            \"Outfitting Pigs With Wings\",\r\n            \"Refreshing Death Touch Ammunition\",\r\n            \"Sanding Wood Elves... now 34% smoother.\",\r\n            \"Sharpening Swords\",\r\n            \"Starching High Elf Robes\",\r\n            \"Stringing Bows\",\r\n            \"Stupidificationing Ogres\",\r\n            \"Warning: Half Elves Are Now .49999 Elves.\",\r\n            \"Whacking Trolls With Ugly Stick\",\r\n            \"Load not interesting stuff\",\r\n        ];\r\n    }\r\n\r\n    checkSavedGame() {\r\n        let userName = localStorage.getItem(this.gameManager.configManager.userKey);\r\n        if (userName) {\r\n            $(\"#user-name-input\").attr(\"value\", userName);\r\n        }\r\n\r\n        if (localStorage.getItem(\"LAST_UPDATED\") !== \"08.18.2019\") {\r\n            localStorage.clear();\r\n        }\r\n\r\n        if (!localStorage.getItem(\"INITIAL_VALUE_MAP\")){\r\n            $(\"#main-menu-load-button\").prop(\"disabled\", true);\r\n            $(\"#in-game-load-button\").prop(\"disabled\", true);\r\n        }\r\n    }\r\n\r\n    loadGameFromMenu() {\r\n        this.gameManager.pageManager.getUserNameFromModal();\r\n        this.loadGame();\r\n    }\r\n\r\n    loadGame() {\r\n        this.runSaveLoadModal();\r\n        $(\"#events-section div\").remove();\r\n\r\n        // get data from local storage\r\n        let valMap = this.gameManager.configManager.initialValueMap = new Map(JSON.parse(localStorage.getItem(\"INITIAL_VALUE_MAP\")));\r\n        let confManager = JSON.parse(localStorage.getItem(\"CONFIG_MANAGER\"));\r\n        let elementToShowArray = this.gameManager.pageManager.showElementArray = JSON.parse(localStorage.getItem(\"ELEMENT_TO_SHOW\"));\r\n        let elementToHideArray = this.gameManager.pageManager.hideElementArray = JSON.parse(localStorage.getItem(\"ELEMENT_TO_HIDE\"));\r\n        // this.gameManager.eventManager.hiddenButtons = JSON.parse(localStorage.getItem(\"HIDDEN_BUTTONS\"));\r\n\r\n        // set Primitives\r\n        Object.keys(confManager).forEach((item) => {\r\n            if (typeof confManager[item] !== 'object') {\r\n                this.gameManager.configManager[item] = confManager[item];\r\n            }\r\n        });\r\n        // set values to Resource objects\r\n        for (let [k, v] of valMap) {\r\n            try {\r\n                this.gameManager.configManager[k].setValue(v);\r\n            } catch (e) {\r\n                console.log(k);\r\n                console.log(this.gameManager.configManager[k]);\r\n            }\r\n        }\r\n\r\n        // tune UI\r\n        setTimeout(()=>{\r\n            this.gameManager.pageManager.showElement(elementToShowArray.map((item) => $(`#${item}`)));\r\n            this.gameManager.pageManager.hideElement(elementToHideArray.map((item) => $(`#${item}`)));\r\n            if (this.gameManager.configManager.leaderPresentFlag) {\r\n                this.gameManager.pageManager.tenWorkTd.slideDown(\"slow\");\r\n            } else {\r\n                this.gameManager.pageManager.tenWorkTd.slideUp(\"slow\");\r\n            }\r\n            if (this.gameManager.configManager.leaderPresent2Flag) {\r\n                this.gameManager.pageManager.maxWorkTd.slideDown(\"slow\");\r\n            } else {\r\n                this.gameManager.pageManager.maxWorkTd.slideUp(\"slow\");\r\n            }\r\n\r\n            if (this.gameManager.configManager.scoutingResearchFlag) {\r\n                this.gameManager.pageManager.changeUI();\r\n            } else {\r\n                this.gameManager.pageManager.unChangeUI();\r\n            }\r\n        }, 15e2);\r\n\r\n        this.gameManager.pageManager.checkProduction();\r\n        this.gameManager.pageManager.checkOverpopulated();\r\n    }\r\n\r\n    saveGame() {\r\n        this.runSaveLoadModal();\r\n\r\n        this.gameManager.pageManager.loadButton.prop(\"disabled\", false);\r\n\r\n        let valMap = this.gameManager.configManager.initialValueMap;\r\n\r\n        for (let [k] of valMap) {\r\n            valMap.set(k, +this.gameManager.configManager[k]);\r\n        }\r\n\r\n        localStorage.setItem(\"LAST_UPDATED\", \"08.18.2019\");\r\n\r\n        localStorage.setItem(\"INITIAL_VALUE_MAP\", JSON.stringify(Array.from(valMap.entries())));\r\n        localStorage.setItem(\"CONFIG_MANAGER\", JSON.stringify(this.gameManager.configManager));\r\n        localStorage.setItem(\"ELEMENT_TO_SHOW\", JSON.stringify(this.gameManager.pageManager.showElementArray));\r\n        localStorage.setItem(\"ELEMENT_TO_HIDE\", JSON.stringify(this.gameManager.pageManager.hideElementArray));\r\n\r\n        // TODO fix circular because of buttons are jQuery elements\r\n        // localStorage.setItem(\"HIDDEN_BUTTONS\", JSON.stringify(this.gameManager.eventManager.hiddenButtons));\r\n    }\r\n\r\n    runSaveLoadModal() {\r\n        $(\"#save-load-modal\").modal();\r\n        $(\"#audio-modal\")[0].play();\r\n        let progress = 0;\r\n        let id = setInterval(() => {\r\n            if (progress > 100) {\r\n                progress = 0;\r\n                clearInterval(id);\r\n                $(\"#save-load-modal\").modal(\"toggle\");\r\n            }\r\n            $(\"#save-load-progress\").css(\"width\", progress + \"%\").text(progress + \"%\");\r\n            progress += _eventManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRandomInt(20);\r\n            $(\"#progress-p\").text(this.funnyPhrases[_eventManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRandomInt(this.funnyPhrases.length - 1)]);\r\n        }, 600);\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (LoaderManager);\n\n//# sourceURL=webpack:///./src/loaderManager.js?");

/***/ }),

/***/ "./src/pageManager.js":
/*!****************************!*\
  !*** ./src/pageManager.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass PageManager {\r\n    constructor() {\r\n        // System variables\r\n        this.userNameElement = $(\"#user-name\");\r\n        // Buttons\r\n        this.pauseButton = $(\"#pause-button\");\r\n        this.saveButton = $(\"#save-button\");\r\n        this.loadButton = $(\"#in-game-load-button\");\r\n        this.mainMenuLoadButton = $(\"#main-menu-load-button\");\r\n        this.startAgainButton = $(\"#start-again-button\");\r\n        this.getFullButton = $(\"#getFullButton\");\r\n        // Others\r\n        this.starvationWarning = $(\"#starvation-warning\");\r\n        this.notAchievement = $(\"#not-achievement\");\r\n        // Scouting\r\n        this.scoutRadioButtons = $(\".form-check-input\");\r\n        this.unknownRadioButton = $(\"#unknown-radio-div\");\r\n        this.elfRadioButton = $(\"#elf-radio-div\");\r\n        this.dwarfRadioButton = $(\"#dwarf-radio-div\");\r\n        this.ufoRadioButton = $(\"#ufo-radio-div\");\r\n        this.dragonRadioButton = $(\"#dragon-radio-div\");\r\n        this.humanRadioButton = $(\"#human-radio-div\");\r\n        this.amazonRadioButton = $(\"#amazon-radio-div\");\r\n        this.spartaRadioButton = $(\"#sparta-radio-div\");\r\n        this.orcRadioButton = $(\"#orc-radio-div\");\r\n        this.scoutProgressBar = $(\"#scout-progress\");\r\n        // Attack\r\n        this.attackDiv = $(\"#attack-div\");\r\n        this.totalPowerSpan = $(\"#total-power-span\");\r\n        this.attackI = $(\"#attack-i\");\r\n        this.yourPowerProgressBar = $(\"#your-power-progress-bar\");\r\n        this.enemyPowerProgressBar = $(\"#enemy-power-progress-bar\");\r\n        this.attackProgressBarSection = $(\"#attack-section\");\r\n        // Click resources\r\n        // Food\r\n        this.clickResourceFoodRow = $(\"#click-resource-food-row\");\r\n        this.foodQuantityElement = $(\"#food-quantity\");\r\n        this.maxFoodQuantityElement = $(\"#max-food-quantity-span\");\r\n        this.foodClickButton = $(\"#food-click-button\");\r\n        this.foodProductionElement = $(\"#food-production-quantity\");\r\n        // Wood\r\n        this.clickResourceWoodRow = $(\"#click-resource-wood-row\");\r\n        this.woodQuantityElement = $(\"#wood-quantity\");\r\n        this.maxWoodQuantityElement = $(\"#max-wood-quantity-span\");\r\n        this.woodClickButton = $(\"#wood-click-button\");\r\n        this.woodProductionElement = $(\"#wood-production-quantity\");\r\n        // Stone\r\n        this.clickResourceStoneRow = $(\"#click-resource-stone-row\");\r\n        this.stoneQuantityElement = $(\"#stone-quantity\");\r\n        this.maxStoneQuantityElement = $(\"#max-stone-quantity-span\");\r\n        this.stoneClickButton = $(\"#stone-click-button\");\r\n        this.stoneProductionElement = $(\"#stone-production-quantity\");\r\n        // Knowledge\r\n        this.emptyRowBeforeKnowledge = $(\"#empty-row-before-knowledge\");\r\n        this.knowledgeRow = $(\"#knowledge-row\");\r\n        this.knowledgeQuantityElement = $(\"#knowledge-quantity\");\r\n        this.maxKnowledgeQuantityElement = $(\"#max-knowledge-quantity-span\");\r\n        this.knowledgeProductionElement = $(\"#knowledge-production-quantity\");\r\n        this.scrollRow = $(\"#scroll-row\");\r\n        this.scrollProductionElement = $(\"#scroll-production-quantity\");\r\n        // Weapon\r\n        this.emptyRowBeforeWeapon = $(\"#empty-row-before-weapon\");\r\n        this.weaponRow = $(\"#weapon-row\");\r\n        this.weaponQuantityElement = $(\"#weapon-quantity\");\r\n        this.weaponProductionElement = $(\"#weapon-production-quantity\");\r\n\r\n        // Table People - Productivity\r\n        this.peopleProductivityTable = $(\"#people-productivity-table\");\r\n        this.curPopulationElement = $(\"#current-population\");\r\n        this.maxPopulationElement = $(\"#max-population\");\r\n        this.createCitizenButton = $(\"#create-worker-button\");\r\n        this.create10CitizenButton = $(\"#create-10-worker-button\");\r\n        this.createMaxCitizenButton = $(\"#create-max-worker-button\");\r\n\r\n        this.corpseRow = $(\"#corpse-row\");\r\n        this.corpseQuantityElement = $(\"#corpse-quantity\");\r\n\r\n        this.inGravesRow = $(\"#in-graves-row\");\r\n        this.inGraveQuantityElement = $(\"#in-graves-quantity\");\r\n        this.maxInGravesQuantityElement = $(\"#max-in-graves-quantity\");\r\n\r\n        this.emptyRowBeforHappinessRowElement = $(\"#empty-row-before-happiness\");\r\n        this.happinessRowElement = $(\"#happiness-row\");\r\n        this.curHappyPeopleElement = $(\"#current-happy-people\");\r\n        this.maxHappyPeopleElement = $(\"#max-happy-people\");\r\n        this.healthRowElement = $(\"#health-row\");\r\n        this.curHealthyPeopleElement = $(\"#current-healthy-people\");\r\n        this.maxHealthyPeopleElement = $(\"#max-healthy-people\");\r\n\r\n        this.emptyRowBeforProductivityRowElement = $(\"#empty-row-before-productivity\");\r\n        this.productivityRowElement = $(\"#productivity-row\");\r\n        this.productivityQuantityElement = $(\"#productivity-quantity\");\r\n\r\n        // Pet\r\n        this.petTable = $(\"#pets-table\");\r\n        this.dragonRowElement = $(\"#dragon-row-element\");\r\n        this.curDragonElement = $(\"#dragon-quantity-element\");\r\n        this.dragonConsumptionElement = $(\"#dragon-consumption-element\");\r\n        this.catRowElement = $(\"#cat-row-element\");\r\n        this.curCatElement = $(\"#cat-quantity-element\");\r\n        this.catConsumptionElement = $(\"#cat-consumption-element\");\r\n\r\n        // Table Jobs\r\n        this.workTable = $(\"#work-table\");\r\n        this.tenWorkTd = $(\".ten-work-td\");\r\n        this.maxWorkTd = $(\".max-work-td\");\r\n        this.workTableEmptyTd = $(\"#work-table .empty-row td, #world-table .empty-row td\");\r\n        // Lazybones\r\n        this.curLazybonesElement = $(\".lazybone-quantity\");\r\n        // Farmer\r\n        this.removeAllFarmerButton = $(\"#remove-all-farmer-button\");\r\n        this.remove10FarmerButton = $(\"#remove-10-farmer-button\");\r\n        this.removeFarmerButton = $(\"#remove-farmer-button\");\r\n        this.farmerQuantityElement = $(\"#farmer-quantity\");\r\n        this.addFarmerButton = $(\"#add-farmer-button\");\r\n        this.add10FarmerButton = $(\"#add-10-farmer-button\");\r\n        this.addMaxFarmerButton = $(\"#add-max-farmer-button\");\r\n        // Woodman\r\n        this.removeAllWoodmanButton = $(\"#remove-all-woodcutter-button\");\r\n        this.remove10WoodmanButton = $(\"#remove-10-woodcutter-button\");\r\n        this.removeWoodmanButton = $(\"#remove-woodcutter-button\");\r\n        this.woodmenQuantityElement = $(\"#woodcutter-quantity\");\r\n        this.addWoodmanButton = $(\"#add-woodcutter-button\");\r\n        this.add10WoodmanButton = $(\"#add-10-woodcutter-button\");\r\n        this.addMaxWoodmanButton = $(\"#add-max-woodcutter-button\");\r\n        // Miner\r\n        this.removeAllMinerButton = $(\"#remove-all-miner-button\");\r\n        this.remove10MinerButton = $(\"#remove-10-miner-button\");\r\n        this.removeMinerButton = $(\"#remove-miner-button\");\r\n        this.minerQuantityElement = $(\"#miner-quantity\");\r\n        this.addMinerButton = $(\"#add-miner-button\");\r\n        this.add10MinerButton = $(\"#add-10-miner-button\");\r\n        this.addMaxMinerButton = $(\"#add-max-miner-button\");\r\n        // Scientist\r\n        this.emptyRowBeforeJobScientist = $(\"#empty-row-before-job-scientist\");\r\n        this.jobScientistRow = $(\"#job-scientist-row\");\r\n        this.removeAllScientistButton = $(\"#remove-all-scientist-button\");\r\n        this.remove10ScientistButton = $(\"#remove-10-scientist-button\");\r\n        this.removeScientistButton = $(\"#remove-scientist-button\");\r\n        this.curScientistQuantityElement = $(\"#scientist-quantity\");\r\n        this.maxScientistQuantityElement = $(\"#max-scientist-quantity\");\r\n        this.addScientistButton = $(\"#add-scientist-button\");\r\n        this.add10ScientistButton = $(\"#add-10-scientist-button\");\r\n        this.addMaxScientistButton = $(\"#add-max-scientist-button\");\r\n        // Writer\r\n        this.jobWriterRow = $(\"#job-writer-row\");\r\n        this.curWriterQuantityElement = $(\"#writer-quantity\");\r\n        this.maxWriterQuantityElement = $(\"#max-writer-quantity\");\r\n        this.addWriterButton = $(\"#add-writer-button\");\r\n        // Funeral\r\n        this.emptyRowBeforeJobFuneral = $(\"#empty-row-before-job-funeral\");\r\n        this.jobFuneralRow = $(\"#job-funeral-process-row\");\r\n        this.removeFuneralButton = $(\"#remove-funeral-button\");\r\n        this.funeralQuantityElement = $(\"#funeral-process-quantity\");\r\n        this.addFuneralButton = $(\"#add-funeral-button\");\r\n        this.funeralProcessImg = $(\"#funeral-process-img\");\r\n        // Music club\r\n        this.emptyRowBeforeJobInClubElement = $(\"#empty-row-before-job-in-club\");\r\n        this.jobDjRowElement = $(\"#job-dj-row\");\r\n        this.djQuantityElement = $(\"#dj-quantity\");\r\n        this.maxDjQuantityElement = $(\"#max-dj-quantity\");\r\n        this.addDjButton = $(\"#add-dj-button\");\r\n        // Sport club\r\n        this.jobInstructorRowElement = $(\"#job-instructor-row\");\r\n        this.instructorQuantityElement = $(\"#instructor-quantity\");\r\n        this.maxInstructorQuantityElement = $(\"#max-instructor-quantity\");\r\n        this.addInstructorButton = $(\"#add-instructor-button\");\r\n        // Leader\r\n        this.emptyRowBeforeJobLeader = $(\"#empty-row-before-job-leader\");\r\n        this.leaderRow = $(\"#job-leader-row\");\r\n        this.leaderQuantityElement = $(\"#leader-quantity\");\r\n        this.addLeaderButton = $(\"#add-leader-button\");\r\n        // Scout\r\n        this.removeAllScoutButton = $(\"#remove-all-scout-button\");\r\n        this.remove10ScoutButton = $(\"#remove-10-scout-button\");\r\n        this.removeScoutButton = $(\"#remove-scout-button\");\r\n        this.scoutQuantityElement = $(\"#scout-quantity\");\r\n        this.addScoutButton = $(\"#add-scout-button\");\r\n        this.add10ScoutButton = $(\"#add-10-scout-button\");\r\n        this.addMaxScoutButton = $(\"#add-max-scout-button\");\r\n        // Warrior\r\n        this.jobWarriorRow = $(\"#job-warrior-row\");\r\n        this.warriorQuantityElement = $(\"#warrior-quantity\");\r\n        this.maxWarriorQuantityElement = $(\"#max-warrior-quantity\");\r\n        this.addWarriorButton = $(\"#add-warrior-button\");\r\n        // Weapon Master\r\n        this.emptyRowBeforeJobMaster = $(\"#empty-row-before-job-master\");\r\n        this.jobWeaponMasterRom = $(\"#job-weapon-master-row\");\r\n        this.removeWeaponMasterButton = $(\"#remove-weapon-master-button\");\r\n        this.weaponMasterQuantityElement = $(\"#weapon-master-quantity\");\r\n        this.maxWeaponMasterQuantityElement = $(\"#max-weapon-master-quantity\");\r\n        this.addWeaponMasterButton = $(\"#add-weapon-master-button\");\r\n\r\n        // Table buildings\r\n        this.buildingTable = $(\"#building-table\");\r\n        // Storage\r\n        this.buildGraveRow = $(\"#build-grave-row\");\r\n        this.graveQuantityElement = $(\"#grave-quantity\");\r\n        this.buildGraveButton = $(\"#build-grave-button\");\r\n        this.buildGraveyardRow = $(\"#build-graveyard-row\");\r\n        this.graveyardQuantityElement = $(\"#graveyard-quantity\");\r\n        this.buildGraveyardButton = $(\"#build-graveyard-button\");\r\n        this.buildScrollRow = $(\"#build-scroll-row\");\r\n        this.scrollQuantityElement = $(\".scroll-quantity\");\r\n        this.buildScrollButton = $(\"#build-scroll-button\");\r\n        this.buildScrollDefinition = $(\"#build-scroll-definition\");\r\n        this.buildGranaryRow = $(\"#build-storage-granary-row\");\r\n        this.granaryQuantityElement = $(\"#granary-quantity\");\r\n        this.buildGranaryButton = $(\"#build-storage-granary-button\");\r\n        this.buildPitRow = $(\"#build-storage-pit-row\");\r\n        this.pitQuantityElement = $(\"#pit-quantity\");\r\n        this.buildPitButton = $(\"#build-storage-pit-button\");\r\n        this.resourceInStorageDefinition = $(\".build-resources-in-storage-definition\");\r\n        // Houses\r\n        this.emptyRowBeforePopulationBuilding = $(\"#empty-row-before-population-building\");\r\n        this.buildTentRow = $(\"#build-population-tent-row\");\r\n        this.tentQuantityElement = $(\"#tent-quantity\");\r\n        this.buildTentButton = $(\"#build-tent-button\");\r\n        this.buildHutRow = $(\"#build-population-hut-row\");\r\n        this.hutQuantityElement = $(\"#hut-quantity\");\r\n        this.buildHutButton = $(\"#build-hut-button\");\r\n        this.buildDuplexRow = $(\"#build-population-duplex-row\");\r\n        this.duplexQuantityElement = $(\"#duplex-quantity\");\r\n        this.buildDuplexButton = $(\"#build-duplex-button\");\r\n        // Science buildings\r\n        this.emptyRowBeforeBuildKnowlegde = $(\"#empty-row-before-knowledge-building\");\r\n        this.buildCampfireRow = $(\"#build-knowledge-campfire-row\");\r\n        this.campfireQuantityElement = $(\"#campfire-quantity\");\r\n        this.buildCampfireButton = $(\"#build-campfire-button\");\r\n        this.buildDolmenRow = $(\"#build-knowledge-dolmen-row\");\r\n        this.dolmenQuantityElement = $(\"#dolmen-quantity\");\r\n        this.buildDolmenButton = $(\"#build-dolmen-button\");\r\n        this.buildParthenonRow = $(\"#build-knowledge-parthenon-row\");\r\n        this.parthenonQuantityElement = $(\"#parthenon-quantity\");\r\n        this.buildParthenonButton = $(\"#build-parthenon-button\");\r\n        this.buildLibraryRow = $(\"#build-library-row\");\r\n        this.libraryQuantityElement = $(\"#library-quantity\");\r\n        this.buildLibraryButton = $(\"#build-library-button\");\r\n        // Health/Happiness\r\n        this.emptyRowBeforeBuildEfficiency = $(\"#empty-row-before-build-club\");\r\n        this.buildMusicClubRow = $(\"#build-music-club-row\");\r\n        this.musicClubQuantityElement = $(\"#music-club-quantity\");\r\n        this.buildMusicClubButton = $(\"#build-music-club-button\");\r\n        this.buildYogaClubRow = $(\"#build-yoga-club-row\");\r\n        this.yogaClubQuantityElement = $(\"#yoga-club-quantity\");\r\n        this.buildYogaClubButton = $(\"#build-yoga-club-button\");\r\n        this.buildPalaceRow = $(\"#build-palace-row\");\r\n        this.palaceQuantityElement = $(\"#palace-quantity\");\r\n        this.buildPalaceButton = $(\"#build-palace-button\");\r\n        // War buildings\r\n        this.emptyRowbeforeBuildWar = $(\"#empty-row-before-build-war\");\r\n        this.buildBarrackRow = $(\"#build-war-barrack-row\");\r\n        this.barrackQuantityElement = $(\"#barrack-quantity\");\r\n        this.buildBarrackButton = $(\"#build-barrack-button\");\r\n        this.buildArmoryRow = $(\"#build-war-armory-row\");\r\n        this.armoryQuantityElement = $(\"#armory-quantity\");\r\n        this.buildArmoryButton = $(\"#build-armory-button\");\r\n\r\n        // Events\r\n        this.eventDiv = $(\"#events-section span\");\r\n        // Achievements\r\n        this.achievementSection = $(\"#achievement-section\");\r\n        this.gotAchievementQuantitySpan = $(\"#got-achievement-quantity-span\");\r\n        this.ufoAchievement = $(\"<img alt='alien img' src='res/img/achievement/alien.png' title='Player is an alien'/>\");\r\n        this.palaceAchievement = $(\"<img alt='palace ach img' src='res/img/stone%20age/palace.png' title='Build a palace'/>\");\r\n        this.firstResearchAchievement = $(\"<img alt='first research img' src='res/img/achievement/knowledge.png' title='First research'/>\");\r\n        this.hungerAchievement = $(\"<img alt='starving img' src='res/img/common/death.png' title='Death from hunger'/>\");\r\n        this.productivityAchievement = $(\"<img alt='productivity img' src='res/img/achievement/speedometer.png' title='Achieve high productivity (more than 190%)'/>\");\r\n        this.moreFoodAchievement = $(\"<img alt='farmer production img' src='res/img/achievement/food.png' title='Even more food, hurray!!! :)'/>\");\r\n\r\n        // Table Technologies\r\n        this.technologyTable = $(\"#technology-table\");\r\n        // Changes\r\n        this.techChangesElement = $(\"#tech-changes-row\");\r\n        this.researchChangesButton = $(\"#tech-changes-button\");\r\n        this.techAgricultureElement = $(\"#tech-agriculture-row\");\r\n        this.researchAgricultureButton = $(\"#tech-agriculture-button\");\r\n        this.techArchitectureElement = $(\"#tech-architecture-row\");\r\n        this.researchArchitectureButton = $(\"#tech-architecture-button\");\r\n        this.techFuneralElement = $(\"#tech-funeral-row\");\r\n        this.researchFuneralButton = $(\"#tech-funeral-button\");\r\n        // Changes2\r\n        this.techChanges2Element = $(\"#tech-changes2-row\");\r\n        this.researchChanges2Button = $(\"#tech-changes2-button\");\r\n        this.techLeadershipElement = $(\"#tech-leadership-row\");\r\n        this.researchLeadershipButton = $(\"#tech-leadership-button\");\r\n        this.techAgriculture2Element = $(\"#tech-agriculture-2-row\");\r\n        this.researchAgriculture2Button = $(\"#tech-agriculture-2-button\");\r\n        this.techArchitecture2Element = $(\"#tech-architecture-2-row\");\r\n        this.researchArchitecture2Button = $(\"#tech-architecture-2-button\");\r\n        // Stone age\r\n        this.techStoneAgeElement = $(\"#tech-stone-age-row\");\r\n        this.researchStoneAgeButton = $(\"#tech-stone-age-button\");\r\n        this.techArchitecture3Element = $(\"#tech-architecture-3-row\");\r\n        this.researchArchitecture3Button = $(\"#tech-architecture-3-button\");\r\n        this.techMusicElement = $(\"#tech-music-row\");\r\n        this.researchMusicButton = $(\"#tech-music-button\");\r\n        this.techSportElement = $(\"#tech-sport-row\");\r\n        this.researchSportButton = $(\"#tech-sport-button\");\r\n        this.techToolElement = $(\"#tech-tools-row\");\r\n        this.researchToolButton = $(\"#tech-tools-button\");\r\n        this.techAncientWeaponElement = $(\"#tech-weapon-row\");\r\n        this.researchWeaponButton = $(\"#tech-ancient-weapon-button\");\r\n        this.techHoeElement = $(\"#tech-hoe-row\");\r\n        this.researchHoeButton = $(\"#tech-hoe-button\");\r\n        this.techAxeElement = $(\"#tech-axe-row\");\r\n        this.researchAxeButton = $(\"#tech-axe-button\");\r\n        this.techPickaxeElement = $(\"#tech-pickaxe-row\");\r\n        this.researchPickaxeButton = $(\"#tech-pickaxe-button\");\r\n        this.tech2sideScrollElement = $(\"#tech-2-side-scroll-row\");\r\n        this.research2sideScrollButton = $(\"#tech-2-side-scroll-button\");\r\n        // Bronze age\r\n        this.techBronzeAgeElement = $(\"#tech-bronze-age-row\");\r\n        this.researchBronzeAgeButton = $(\"#tech-bronze-age-button\");\r\n        this.techArchitecture4Element = $(\"#tech-architecture-4-row\");\r\n        this.researchArchitecture4Button = $(\"#tech-architecture-4-button\");\r\n        this.techWheelElement = $(\"#tech-wheel-row\");\r\n        this.researchWheelButton = $(\"#tech-wheel-button\");\r\n\r\n        this.techAgriculture3Element = $(\"#tech-agriculture-3-row\");\r\n        this.researchAgriculture3Button = $(\"#tech-agriculture-3-button\");\r\n        this.techLeadership2Element = $(\"#tech-leadership-2-row\");\r\n        this.researchLeadership2Button = $(\"#tech-leadership-2-button\");\r\n        this.techPackagingElement = $(\"#tech-packaging-row\");\r\n        this.researchPackagingButton = $(\"#tech-packaging-button\");\r\n        this.techScoutElement = $(\"#tech-scouting-row\");\r\n        this.researchScoutButton = $(\"#tech-scouting-button\");\r\n\r\n        this.techWeaponElement = $(\"#tech-weapon-row\");\r\n        this.researchWeaponButton = $(\"#tech-ancient-weapon-button\");\r\n\r\n        this.techArchitecture5Element = $(\"#tech-architecture-5-row\");\r\n        this.researchArchitecture5Button = $(\"#tech-architecture-5-button\");\r\n\r\n        this.techDomesticationElement = $(\"#tech-domestication-row\");\r\n        this.researchDomesticationButton = $(\"#tech-domestication-button\");\r\n        this.techMysticismElement = $(\"#tech-mysticism-row\");\r\n        this.researchMysticismButton = $(\"#tech-mysticism-button\");\r\n        this.techToolAgeElement = $(\"#tech-tool-age-row\");\r\n        this.researchToolAgeButton = $(\"#tech-tool-age-button\");\r\n    }\r\n\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.configManager = this.gameManager.configManager;\r\n\r\n        // for saving/loading\r\n        this.showElementArray = [\r\n            \"build-population-tent-row\",\r\n            \"tech-changes-row\",\r\n        ];\r\n        this.hideElementArray = [\r\n            // \"in-game-load-button\",\r\n            // \"pause-button\",\r\n            // \"save-button\",\r\n            // \"start-again-button\",\r\n            \"create-10-worker-button\",\r\n\r\n            \"click-resource-wood-row\",\r\n            \"click-resource-stone-row\",\r\n            \"empty-row-before-knowledge\",\r\n            \"knowledge-row\",\r\n            \"scroll-row\",\r\n            \"empty-row-before-weapon\",\r\n            \"weapon-row\",\r\n\r\n            \"people-productivity-table\",\r\n            \"corpse-row\",\r\n            \"in-graves-row\",\r\n            \"empty-row-before-happiness\",\r\n            \"happiness-row\",\r\n            \"health-row\",\r\n            \"empty-row-before-productivity\",\r\n            \"productivity-row\",\r\n\r\n            \"pets-table\",\r\n\r\n            \"work-table\",\r\n            \"empty-row-before-job-leader\",\r\n            \"job-leader-row\",\r\n            \"empty-row-before-job-scientist\",\r\n            \"job-scientist-row\",\r\n            \"job-writer-row\",\r\n            \"empty-row-before-job-funeral\",\r\n            \"job-funeral-process-row\",\r\n            \"empty-row-before-job-in-club\",\r\n            \"job-dj-row\",\r\n            \"job-instructor-row\",\r\n            \"empty-row-before-job-master\",\r\n            \"job-weapon-master-row\",\r\n            \"job-warrior-row\",\r\n\r\n            \"building-table\",\r\n            \"build-grave-row\",\r\n            \"build-graveyard-row\",\r\n            \"build-population-tent-row\",\r\n            \"build-scroll-row\",\r\n            \"build-storage-granary-row\",\r\n            \"build-storage-pit-row\",\r\n            \"empty-row-before-population-building\",\r\n            \"build-population-hut-row\",\r\n            \"build-population-duplex-row\",\r\n            \"build-knowledge-campfire-row\",\r\n            \"build-knowledge-dolmen-row\",\r\n            \"empty-row-before-knowledge-building\",\r\n            \"build-knowledge-parthenon-row\",\r\n            \"build-library-row\",\r\n            \"empty-row-before-build-club\",\r\n            \"build-music-club-row\",\r\n            \"build-yoga-club-row\",\r\n            \"build-palace-row\",\r\n            \"empty-row-before-build-war\",\r\n            \"build-war-armory-row\",\r\n            \"build-war-barrack-row\",\r\n\r\n            \"technology-table\",\r\n            \"tech-agriculture-row\",\r\n            \"tech-architecture-row\",\r\n            \"tech-funeral-row\",\r\n            \"tech-changes2-row\",\r\n            \"tech-leadership-row\",\r\n            \"tech-agriculture-2-row\",\r\n            \"tech-architecture-2-row\",\r\n            \"tech-stone-age-row\",\r\n            \"tech-architecture-3-row\",\r\n            \"tech-music-row\",\r\n            \"tech-sport-row\",\r\n            \"tech-tools-row\",\r\n            \"tech-hoe-row\",\r\n            \"tech-axe-row\",\r\n            \"tech-pickaxe-row\",\r\n            \"tech-2-side-scroll-row\",\r\n            \"tech-bronze-age-row\",\r\n            \"tech-architecture-4-row\",\r\n            \"tech-wheel-row\",\r\n            \"tech-agriculture-3-row\",\r\n            \"tech-leadership-2-row\",\r\n            \"tech-packaging-row\",\r\n            \"tech-scouting-row\",\r\n            \"tech-weapon-row\",\r\n            \"tech-architecture-5-row\",\r\n            \"tech-domestication-row\",\r\n            \"tech-mysticism-row\",\r\n            \"tech-tool-age-row\"\r\n        ];\r\n    }\r\n\r\n    hideElement(ar) {\r\n        ar.forEach((item) => {\r\n            item.hide(\"slow\");\r\n            let index = this.showElementArray.indexOf(item.attr(\"id\"));\r\n            if (index !== -1) {\r\n                this.showElementArray.splice(index, 1);\r\n                this.hideElementArray.push(item.attr(\"id\"));\r\n            }\r\n        });\r\n    }\r\n\r\n    showElement(ar) {\r\n        ar.forEach((item) => {\r\n            item.show(\"slow\");\r\n            let index = this.hideElementArray.indexOf(item.attr(\"id\"));\r\n            if (index !== -1) {\r\n                this.hideElementArray.splice(index, 1);\r\n                this.showElementArray.push(item.attr(\"id\"));\r\n\r\n                item.addClass(\"highlight\");\r\n            }\r\n        });\r\n    }\r\n\r\n    hideFirstShowSecond(firstElementToHide, newElementArToShow) {\r\n        firstElementToHide.hide(\"slow\", () => this.showElement(newElementArToShow));\r\n\r\n        let index = this.showElementArray.indexOf(firstElementToHide.attr(\"id\"));\r\n        if (index !== -1) {\r\n            this.showElementArray.splice(index, 1);\r\n            this.hideElementArray.push(firstElementToHide.attr(\"id\"));\r\n        }\r\n    }\r\n\r\n    static reloadSite() {\r\n        document.location.reload(true);\r\n    }\r\n\r\n    pause() {\r\n        $(\"body\").css({\"opacity\": \"0.1\"});\r\n        setTimeout(() => {\r\n            alert(\"...pause. \");\r\n        }, 100);\r\n        setTimeout(() => {\r\n            $(\"body\").css({\"opacity\": \"1\"});\r\n        }, 300);\r\n    }\r\n\r\n    checkProduction() {\r\n        this.changeColor(+this.configManager.foodTotalProduction, this.foodProductionElement, this.addFarmerButton);\r\n        this.changeColor(+this.configManager.woodTotalProduction, this.woodProductionElement);\r\n        this.changeColor(+this.configManager.stoneTotalProduction, this.stoneProductionElement);\r\n        this.changeColor(+this.configManager.knowledgeTotalProduction, this.knowledgeProductionElement);\r\n        this.changeColor(+this.configManager.lazybones, this.curLazybonesElement);\r\n\r\n        this.changeColor(+this.configManager.scrollTotalProduction, this.scrollProductionElement);\r\n        this.changeColor(+this.configManager.weaponTotalProduction, this.weaponProductionElement);\r\n    }\r\n\r\n    checkOverpopulated() {\r\n        this.changeColor(+this.configManager.populationStorage - +this.configManager.currentPopulation - 1, this.maxPopulationElement);\r\n    }\r\n\r\n    changeColor(checkQuantity, target, button) {\r\n        if (checkQuantity > 0) {\r\n            target.css({\"background-color\": \"#28a745\", \"border-color\": \"#28a745\", \"color\": \"white\"});\r\n            if (!!button) {\r\n                button.css({\"background-color\": \"#28a745\", \"border-color\": \"#28a745\", \"color\": \"white\"});\r\n            }\r\n        } else if (checkQuantity === 0) {\r\n            target.css({\"background-color\": \"\", \"color\": \"white\"});\r\n        } else {\r\n            target.css({\"background-color\": \"red\", \"color\": \"white\"});\r\n            if (!!button) {\r\n                button.css({\"background-color\": \"green\", \"border-color\": \"red\"});\r\n            }\r\n        }\r\n    }\r\n\r\n    changeUI() {\r\n        $(\"#audio-change-ui\")[0].play();\r\n        $(\"#nav-tab\").show(\"slow\");\r\n\r\n        this.peopleProductivityTable.hide(\"slow\", () => {\r\n            this.moveTable(\"people-productivity-table\", \"nav-people\", true);\r\n        });\r\n        this.peopleProductivityTable.slideDown(\"slow\");\r\n        this.moveTable(\"work-table\", \"nav-work\", true);\r\n    }\r\n\r\n    unChangeUI() {\r\n        $(\"#nav-tab\").hide(\"slow\");\r\n\r\n        this.peopleProductivityTable.hide(\"slow\", () => {\r\n            this.moveTable(\"people-productivity-table\", \"click-resource-table\", false);\r\n        });\r\n        this.peopleProductivityTable.slideDown(\"slow\");\r\n        this.moveTable(\"work-table\", \"nav-tabContent\", false);\r\n    }\r\n\r\n    moveTable(table, to, append) {\r\n        if (append) {\r\n            $(\"#\" + table + \" caption\").hide(\"slow\");\r\n        } else {\r\n            $(\"#\" + table + \" caption\").show(\"slow\");\r\n        }\r\n\r\n        let element = $(\"#\" + table);\r\n        element.detach();\r\n        if (append) {\r\n            $(\"#\" + to).append(element);\r\n        } else {\r\n            $(\"#\" + to).after(element);\r\n        }\r\n    }\r\n\r\n    runMainMenuModal() {\r\n        try {\r\n            $(\"#audio-modal\")[0].play();\r\n        } catch (e) {\r\n            console.log(\"Audio modal isn't loaded...\");\r\n        }\r\n        $('#main-menu-modal').on('shown.bs.modal', () => {\r\n            $('#user-name-input').trigger('focus')\r\n        });\r\n        $('#main-menu-modal').modal();\r\n\r\n        $(\"#user-name-input\").on('keyup', (e) => {\r\n            if (e.key === \"Enter\") {\r\n                this.getUserNameFromModal();\r\n                $('#main-menu-modal').modal('toggle');\r\n                $('#get-food-modal').modal();\r\n                $(\"#audio-modal\")[0].play();\r\n            }\r\n        });\r\n\r\n        $(\"#main-menu-new-game-button\").on(\"click\", () => {\r\n            localStorage.clear();\r\n            this.getUserNameFromModal();\r\n            $('#main-menu-modal').modal('toggle');\r\n            $('#get-food-modal').modal();\r\n            $(\"#audio-modal\")[0].play();\r\n        });\r\n    }\r\n\r\n    getUserNameFromModal() {\r\n        let userName = $(\"#user-name-input\").val().trim();\r\n        userName = userName || \"No named\";\r\n        if (userName === \"UFO Alien\") {\r\n            this.eventManager.showAchievementToUser(\"UFO Alien\");\r\n        }\r\n        userName = userName.charAt(0).toUpperCase() + userName.slice(1);\r\n        this.configManager.userName = userName;\r\n\r\n        localStorage.setItem(this.configManager.userKey, userName);\r\n        this.userNameElement.text(userName);\r\n\r\n        this.gameManager.intervalManager.runInterval();\r\n        this.runTooltips();\r\n    }\r\n\r\n    runTooltips() {\r\n        $('[data-toggle=\"tooltip\"]').tooltip();\r\n    }\r\n\r\n    clickResourceButton(resourceType, quantity) {\r\n        resourceType.changeValue(quantity);\r\n    }\r\n\r\n    checkLeaderPresence(result, workType) {\r\n        if (!this.configManager.leaderPresentFlag && result && workType === this.configManager.leader) {\r\n            this.workTableEmptyTd.attr(\"colspan\", \"7\");\r\n            // this.showElement([this.tenWorkTd]);\r\n            this.tenWorkTd.slideDown(\"slow\");\r\n\r\n            this.configManager.leaderPresentFlag = true;\r\n        }\r\n\r\n        if (!this.configManager.leaderPresent2ResearchFlag && +this.configManager.leader === 9) {\r\n            this.addLeaderButton.blur().prop(\"disabled\", true).tooltip(\"hide\");\r\n            this.addLeaderButton.hide(\"slow\", () => {\r\n                this.addLeaderButton.prop(\"disabled\", false);\r\n            });\r\n        }\r\n    }\r\n\r\n    checkLeaderPresence2(result, workType) {\r\n        if (!this.configManager.leaderPresent2Flag && workType === this.configManager.leader && result && +this.configManager.leader > 9) {\r\n            this.workTableEmptyTd.attr(\"colspan\", \"9\");\r\n            // this.showElement([this.maxWorkTd]);\r\n            this.maxWorkTd.slideDown(\"slow\");\r\n\r\n            this.configManager.leaderPresent2Flag = true;\r\n        }\r\n    }\r\n\r\n    checkHiddenTables() {\r\n        if (!this.configManager.showPeopleTableFlag && +this.configManager.food > 5) {\r\n            this.showElement([this.peopleProductivityTable]);\r\n            this.configManager.showPeopleTableFlag = true;\r\n            $(\"#audio-modal\")[0].play();\r\n            $('#citizen-modal').modal();\r\n        }\r\n        if (!this.configManager.showWorkTableFlag && +this.configManager.currentPopulation > 0) {\r\n            this.showElement([this.workTable, this.clickResourceWoodRow, this.clickResourceStoneRow]);\r\n            this.configManager.showWorkTableFlag = true;\r\n        }\r\n        if (!this.configManager.showBuildingTableFlag && +this.configManager.currentPopulation === +this.configManager.populationStorage) {\r\n            this.showElement([this.buildingTable]);\r\n            this.configManager.showBuildingTableFlag = true;\r\n            $(\"#audio-modal\")[0].play();\r\n            $('#building-modal').modal();\r\n        }\r\n        if (!this.configManager.showTechnologyTableFlag && +this.configManager.wood > 14) {\r\n            this.showElement([this.technologyTable]);\r\n            this.configManager.showTechnologyTableFlag = true;\r\n            $(\"#audio-modal\")[0].play();\r\n            $('#technology-modal').modal();\r\n        }\r\n\r\n        if (!this.configManager.showPetTableFlag && (+this.configManager.dragon || +this.configManager.cat)) {\r\n            this.showElement([this.petTable]);\r\n            this.configManager.showPetTableFlag = true;\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (PageManager);\n\n//# sourceURL=webpack:///./src/pageManager.js?");

/***/ }),

/***/ "./src/scienceManager.js":
/*!*******************************!*\
  !*** ./src/scienceManager.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n * Manage researches\r\n */\r\nclass ScienceManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n\r\n        this.configManager = this.gameManager.configManager;\r\n        this.eventManager = this.gameManager.eventManager;\r\n        this.pageManager = this.gameManager.pageManager;\r\n\r\n        this.researchMap = new Map([\r\n            [\"changes\", new ChangesResearch(this.configManager, this.pageManager, this.eventManager)],\r\n            [\"agriculture\", new AgricultureResearch(\r\n                new Research(this.configManager.agricultureCost, this.pageManager.techAgricultureElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"architecture\", new Research(this.configManager.architectureCost, this.pageManager.techArchitectureElement, [this.pageManager.buildHutRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"funeral\", new Research(this.configManager.funeralCost, this.pageManager.techFuneralElement, [this.pageManager.buildScrollRow, this.pageManager.buildGraveRow,\r\n                this.pageManager.emptyRowBeforePopulationBuilding, this.pageManager.techChanges2Element], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"changes2\", new Research(this.configManager.changes2Cost, this.pageManager.techChanges2Element, [this.pageManager.techAgriculture2Element,\r\n                    this.pageManager.techArchitecture2Element, this.pageManager.techLeadershipElement, this.pageManager.techStoneAgeElement], this.configManager, this.pageManager,\r\n                this.eventManager)],\r\n            [\"leadership\", new Research(this.configManager.leadershipCost, this.pageManager.techLeadershipElement, [this.pageManager.emptyRowBeforeJobLeader, this.pageManager.leaderRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"agriculture2\", new Agriculture2Research(\r\n                new Research(this.configManager.agriculture2Cost, this.pageManager.techAgriculture2Element, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"architecture2\", new Research(this.configManager.architecture2Cost, this.pageManager.techArchitecture2Element, [this.pageManager.buildPitRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"stone age\", new Research(this.configManager.stoneAgeCost, this.pageManager.techStoneAgeElement, [this.pageManager.buildGranaryRow, this.pageManager.techArchitecture3Element,\r\n                this.pageManager.techMusicElement, this.pageManager.techSportElement, this.pageManager.techToolElement], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"architecture3\", new Research(this.configManager.architecture3Cost, this.pageManager.techArchitecture3Element, [this.pageManager.buildDolmenRow],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n            [\"music\", new Research(this.configManager.musicCost, this.pageManager.techMusicElement, [this.pageManager.buildMusicClubRow], this.configManager,\r\n                this.pageManager, this.eventManager)],\r\n            [\"sport\", new Research(this.configManager.sportCost, this.pageManager.techSportElement, [this.pageManager.emptyRowBeforeJobInClubElement,\r\n                this.pageManager.emptyRowBeforeBuildEfficiency, this.pageManager.buildYogaClubRow], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"tool\", new Research(this.configManager.toolCost, this.pageManager.techToolElement, [this.pageManager.techAxeElement, this.pageManager.techPickaxeElement,\r\n                this.pageManager.techHoeElement, this.pageManager.tech2sideScrollElement], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"hoe\", new HoeResearch(\r\n                new Research(this.configManager.hoeCost, this.pageManager.techHoeElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"axe\", new AxeResearch(\r\n                new Research(this.configManager.axeCost, this.pageManager.techAxeElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"pickaxe\", new PickAxeResearch(\r\n                new Research(this.configManager.pickaxeCost, this.pageManager.techPickaxeElement, [this.pageManager.techBronzeAgeElement], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"2 side scroll\", new TwoSideScrollResearch(\r\n                new Research(this.configManager.bothSideScrollCost, this.pageManager.tech2sideScrollElement, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"bronze age\", new Research(this.configManager.bronzeAgeCost, this.pageManager.techBronzeAgeElement, [this.pageManager.techArchitecture4Element, this.pageManager.techWheelElement],\r\n                this.configManager, this.pageManager, this.eventManager\r\n            )],\r\n            [\"architecture4\", new Architecture4Research(\r\n                new Research(this.configManager.architecture4Cost, this.pageManager.techArchitecture4Element, [this.pageManager.buildGraveyardRow, this.pageManager.buildDuplexRow,\r\n                        this.pageManager.buildParthenonRow, this.pageManager.buildLibraryRow, this.pageManager.scrollRow, this.pageManager.jobWriterRow]\r\n                    , this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"wheel\", new WheelResearch(\r\n                new Research(this.configManager.wheelCost, this.pageManager.techWheelElement, [this.pageManager.techAgriculture3Element, this.pageManager.techLeadership2Element,\r\n                    this.pageManager.techPackagingElement, this.pageManager.techScoutElement], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"agriculture3\", new AgricultureResearch(\r\n                new Research(this.configManager.agriculture3Cost, this.pageManager.techAgriculture3Element, [], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"leadership2\", new Leadership2Research(\r\n                new Research(this.configManager.leadership2Cost, this.pageManager.techLeadership2Element, [this.pageManager.addLeaderButton], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"packaging\", new PackagingResearch(\r\n                new Research(this.configManager.packagingCost, this.pageManager.techPackagingElement, [this.pageManager.techArchitecture5Element], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"scouting\", new ScoutingResearch(\r\n                new Research(this.configManager.scoutingCost, this.pageManager.techScoutElement, [this.pageManager.techAncientWeaponElement], this.configManager, this.pageManager, this.eventManager)\r\n            )],\r\n            [\"weapon\", new Research(this.configManager.ancientWeaponCost, this.pageManager.techAncientWeaponElement, [this.pageManager.weaponRow, this.pageManager.emptyRowBeforeJobMaster\r\n                    , this.pageManager.jobWeaponMasterRom, this.pageManager.emptyRowbeforeBuildWar, this.pageManager.buildArmoryRow, this.pageManager.buildBarrackRow], this.configManager, this.pageManager\r\n                , this.eventManager)],\r\n            [\"architecture5\", new Research(this.configManager.architecture5Cost, this.pageManager.techArchitecture5Element, [this.pageManager.buildPalaceRow, this.pageManager.techDomesticationElement\r\n                    , this.pageManager.techMysticismElement, this.pageManager.techToolAgeElement],\r\n                this.configManager, this.pageManager, this.eventManager)],\r\n\r\n            // TODO finish the next 3 techs is the next age\r\n            [\"domestication\", new Research(this.configManager.domesticationCost, null, [], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"mysticism\", new Research(this.configManager.mysticismCost, null, [], this.configManager, this.pageManager, this.eventManager)],\r\n            [\"tool age\", new Research(this.configManager.toolAgeCost, null, [], this.configManager, this.pageManager, this.eventManager)],\r\n        ]);\r\n    }\r\n\r\n    research(name) {\r\n        this.researchMap.get(name).conductResearch();\r\n    }\r\n}\r\n\r\n/**\r\n * For 1st research, it's separate due to specific resources to conduct the research.\r\n */\r\nclass ChangesResearch {\r\n    constructor(configManager, pageManager, eventManager) {\r\n        this.woodPrice = 10;\r\n        this.stonePrice = 10;\r\n\r\n        this.configManager = configManager;\r\n        this.pageManager = pageManager;\r\n        this.eventManager = eventManager;\r\n    }\r\n\r\n    conductResearch() {\r\n        return this.tryToResearch();\r\n    }\r\n\r\n    tryToResearch() {\r\n        let result = true;\r\n\r\n        if (+this.configManager.wood >= this.woodPrice && +this.configManager.stone >= this.stonePrice) {\r\n            this.configManager.wood.changeValue(-this.woodPrice);\r\n            this.configManager.stone.changeValue(-this.stonePrice);\r\n\r\n            this.eventManager.showAchievementToUser(\"First Research\");\r\n\r\n            this.pageManager.hideFirstShowSecond(this.pageManager.techChangesElement, [this.pageManager.emptyRowBeforeKnowledge, this.pageManager.knowledgeRow,\r\n                this.pageManager.emptyRowBeforeJobScientist, this.pageManager.jobScientistRow, this.pageManager.emptyRowBeforeBuildKnowlegde, this.pageManager.buildCampfireRow,\r\n                this.pageManager.techAgricultureElement, this.pageManager.techFuneralElement, this.pageManager.techArchitectureElement]);\r\n        } else {\r\n            this.eventManager.showEventMsgToUser(\"more resources\");\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Class base research\r\n */\r\nclass Research {\r\n    constructor(price, elementToHide, elementToShowAr, configManager, pageManager, eventManager) {\r\n        this.price = price;\r\n        this.elementToHide = elementToHide;\r\n        this.elementToShowAr = elementToShowAr;\r\n\r\n        this.configManager = configManager;\r\n        this.pageManager = pageManager;\r\n        this.eventManager = eventManager;\r\n    }\r\n\r\n    conductResearch() {\r\n        return this.tryToResearch();\r\n    }\r\n\r\n    tryToResearch() {\r\n        let result = true;\r\n\r\n        if (+this.configManager.knowledge >= this.price) {\r\n            this.configManager.knowledge.changeValue(-this.price);\r\n            if (this.elementToHide && this.elementToShowAr) {\r\n                this.pageManager.hideFirstShowSecond(this.elementToHide, this.elementToShowAr);\r\n            }\r\n        } else {\r\n            this.eventManager.showEventMsgToUser(\"more knowledge\");\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Example of \"decorator\" pattern\r\n */\r\nclass ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        this.research = research;\r\n    }\r\n\r\n    conductResearch() {\r\n        let result = this.research.conductResearch();\r\n        if (result) {\r\n            this.extraLogic();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    extraLogic() {\r\n    }\r\n}\r\n\r\n/**\r\n * Example of \"template method\" pattern\r\n */\r\nclass AgricultureResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"food\", true);\r\n        this.research.pageManager.checkProduction();\r\n        this.research.pageManager.clickResourceFoodRow.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass Agriculture2Research extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"food\", true);\r\n        this.research.eventManager.showAchievementToUser(\"More Food\");\r\n        this.research.pageManager.checkProduction();\r\n        this.research.pageManager.clickResourceFoodRow.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass HoeResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.foodIncreaseStep = 0.1;\r\n        this.research.configManager.changeProduction(\"food\", true);\r\n        this.research.configManager.productivity.changeValue(6.25);\r\n        this.research.pageManager.checkProduction();\r\n        this.research.pageManager.productivityQuantityElement.addClass(\"highlight\");\r\n        this.research.pageManager.clickResourceFoodRow.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass AxeResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"wood\", true);\r\n        this.research.configManager.productivity.changeValue(6.25);\r\n        this.research.pageManager.checkProduction();\r\n        this.research.pageManager.productivityQuantityElement.addClass(\"highlight\");\r\n        this.research.pageManager.clickResourceWoodRow.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass PickAxeResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeProduction(\"stone\", true);\r\n        this.research.configManager.productivity.changeValue(6.25);\r\n        this.research.pageManager.checkProduction();\r\n        this.research.pageManager.productivityQuantityElement.addClass(\"highlight\");\r\n        this.research.pageManager.clickResourceStoneRow.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass TwoSideScrollResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.knowledgeStorage.changeValue(+this.research.configManager.scroll * +this.research.configManager.knowledgeInScroll);\r\n        this.research.configManager.knowledgeInScroll.changeValue(5);\r\n        this.research.pageManager.gameManager.builderManager.buildingMap.get(\"scroll\").resourceToChangeAr[1][1] = +this.research.configManager.knowledgeInScroll;\r\n\r\n        this.research.pageManager.buildScrollButton.text(\"2-side scroll\");\r\n        this.research.pageManager.buildScrollDefinition.text(\"10\");\r\n\r\n        this.research.pageManager.buildScrollRow.addClass(\"highlight\");\r\n        this.research.pageManager.maxKnowledgeQuantityElement.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass Architecture4Research extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.pageManager.hideElement([this.research.pageManager.buildGraveRow, this.research.pageManager.buildScrollRow, this.research.pageManager.buildTentRow, this.research.pageManager.buildCampfireRow]);\r\n    }\r\n}\r\n\r\nclass WheelResearch extends ResearchWithExtraLogic {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.changeAllProduction(true);\r\n        this.research.configManager.productivity.changeValue(25);\r\n\r\n        this.research.pageManager.clickResourceFoodRow.addClass(\"highlight\");\r\n        this.research.pageManager.clickResourceWoodRow.addClass(\"highlight\");\r\n        this.research.pageManager.clickResourceStoneRow.addClass(\"highlight\");\r\n        this.research.pageManager.knowledgeRow.addClass(\"highlight\");\r\n        this.research.pageManager.productivityRowElement.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass PackagingResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.configManager.foodStorage.changeValue(+this.research.configManager.granary * +this.research.configManager.resourcesInStorage);\r\n        this.research.configManager.woodStorage.changeValue(+this.research.configManager.pit * +this.research.configManager.resourcesInStorage);\r\n        this.research.configManager.stoneStorage.changeValue(+this.research.configManager.pit * +this.research.configManager.resourcesInStorage);\r\n\r\n        this.research.configManager.resourcesInStorage.changeValue(50);\r\n\r\n        this.research.pageManager.gameManager.builderManager.buildingMap.get(\"granary\").resourceToChangeAr[1][1] = +this.research.configManager.resourcesInStorage;\r\n        this.research.pageManager.gameManager.builderManager.buildingMap.get(\"pit\").resourceToChangeAr[1][1] = +this.research.configManager.resourcesInStorage;\r\n        this.research.pageManager.gameManager.builderManager.buildingMap.get(\"pit\").resourceToChangeAr[1][2] = +this.research.configManager.resourcesInStorage;\r\n\r\n        this.research.pageManager.resourceInStorageDefinition.text(\"100\").addClass(\"highlight\");\r\n        this.research.pageManager.maxFoodQuantityElement.addClass(\"highlight\");\r\n        this.research.pageManager.maxWoodQuantityElement.addClass(\"highlight\");\r\n        this.research.pageManager.maxStoneQuantityElement.addClass(\"highlight\");\r\n    }\r\n}\r\n\r\nclass Leadership2Research extends ResearchWithExtraLogic {\r\n\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n\r\n    extraLogic() {\r\n        this.research.configManager.leaderPresent2ResearchFlag = true;\r\n    }\r\n}\r\n\r\nclass ScoutingResearch extends ResearchWithExtraLogic {\r\n    constructor(research) {\r\n        super(research);\r\n    }\r\n\r\n    extraLogic() {\r\n        this.research.pageManager.changeUI();\r\n        this.research.configManager.scoutingResearchFlag = true;\r\n        this.research.pageManager.peopleProductivityTable.addClass(\"highlight\");\r\n        $(\"nav a\").addClass(\"highlight\");\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScienceManager);\n\n//# sourceURL=webpack:///./src/scienceManager.js?");

/***/ }),

/***/ "./src/warManager.js":
/*!***************************!*\
  !*** ./src/warManager.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _eventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventManager */ \"./src/eventManager.js\");\n\r\n\r\nclass WarManager {\r\n    initialization(gameManager) {\r\n        this.gameManager = gameManager;\r\n    }\r\n\r\n    attackEvent(event) {\r\n        $(\"#audio-attack\")[0].play();\r\n        if (+this.gameManager.pageManager.totalPowerSpan.text() === 0) {\r\n            this.gameManager.eventManager.showMsgToUser(`Lack of attack power, find more warriors.`, this.gameManager.eventManager.warningStatus);\r\n        } else {\r\n            this.gameManager.pageManager.attackDiv.hide(\"slow\");\r\n\r\n            let targetButton = event.target;\r\n            targetButton.remove();\r\n\r\n            this.attackPhase(targetButton.textContent);\r\n        }\r\n    }\r\n\r\n    attackPhase(who) {\r\n        switch (who.split(\" \")[0]) {\r\n            case \"Amazon\":\r\n            case \"Ufo\":\r\n            case \"Human\":\r\n                this.noBattle(who);\r\n                break;\r\n            default:\r\n                this.battle(who);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    noBattle(who) {\r\n        $(\"#attack-section2\").show(\"slow\");\r\n        $(\"#attack-i2\").text(who);\r\n\r\n        let i = 0;\r\n        let width = 0;\r\n        $(\"#no-battle-progress-bar\").css(\"width\", width + \"%\").attr(\"aria-valuenow\", width);\r\n        let intervalId = setInterval(()=> {\r\n            width += 1.5125;\r\n            $(\"#no-battle-progress-bar\").css(\"width\", width + \"%\").attr(\"aria-valuenow\", width);\r\n\r\n            i++;\r\n            if (i === 64) {\r\n                clearInterval(intervalId);\r\n                setTimeout(() => {\r\n                    $(\"#attack-section2\").hide(\"slow\");\r\n                    this.gameManager.pageManager.attackDiv.show(\"slow\");\r\n                }, 300);\r\n\r\n                this.gameManager.eventManager.noBattleResultEvent(who);\r\n            }\r\n        }, 125);\r\n    }\r\n\r\n    battle(who) {\r\n        this.gameManager.pageManager.attackProgressBarSection.show(\"slow\");\r\n        this.gameManager.pageManager.attackI.text(who);\r\n\r\n        let yourPower = +this.gameManager.pageManager.totalPowerSpan.text();\r\n        let yourInitialPower = yourPower;\r\n        let enemyPower = this.getEnemyPower(who);\r\n        yourPower = yourPower === enemyPower ? yourPower + 1 : yourPower;\r\n\r\n        $(\"#enemy-power-i\").text(enemyPower.toFixed());\r\n        this.showWarProgressBar(yourPower, enemyPower);\r\n\r\n        let yourLostPerStep = enemyPower * enemyPower / yourPower * 0.25;\r\n        let enemyLostPerStep = enemyPower * 0.25;\r\n        if (yourPower < enemyPower) {\r\n            yourLostPerStep = yourPower * 0.25;\r\n            enemyLostPerStep = yourPower * yourPower / enemyPower * 0.25;\r\n        }\r\n\r\n        let i = 0;\r\n        let j = 0;\r\n        let intervalId = setInterval(() => {\r\n            yourPower -= yourLostPerStep;\r\n            enemyPower -= enemyLostPerStep;\r\n            for (; j < Math.floor(yourInitialPower - yourPower); j++) {\r\n                this.gameManager.citizenManager.killWarrior();\r\n            }\r\n\r\n            $(\"#enemy-power-i\").text(enemyPower.toFixed());\r\n            this.showWarProgressBar(yourPower, enemyPower);\r\n\r\n            i++;\r\n            if (i === 4) {\r\n                clearInterval(intervalId);\r\n                this.finishTheLeftAlive(yourPower, enemyPower);\r\n                setTimeout(() => {\r\n                    this.gameManager.pageManager.attackProgressBarSection.hide(\"slow\");\r\n                    this.gameManager.pageManager.attackDiv.show(\"slow\");\r\n                }, 300);\r\n\r\n                this.gameManager.eventManager.battleResultEvent(who, yourPower > enemyPower);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    getEnemyPower(who) {\r\n        let result = _eventManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRandomInt(40) + 10;\r\n\r\n        if (who.includes(\"city\")) {\r\n            // 200 - 1k\r\n            result = _eventManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRandomInt(800) + 200;\r\n        } else if (who.includes(\"palace\")) {\r\n            // 3k - 10k\r\n            result = _eventManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRandomInt(7000) + 3000;\r\n        }\r\n\r\n        result = who.includes(\"Sparta\") ? result * 5 : result;\r\n\r\n        return result;\r\n    }\r\n\r\n    showWarProgressBar(yourPower, enemyPower) {\r\n        let onePercent = 100 / (yourPower + enemyPower);\r\n        let yourPowerOnProgressBar = Math.round(onePercent * yourPower);\r\n        let enemyPowerOnProgressBar = Math.round(onePercent * enemyPower);\r\n\r\n        this.gameManager.pageManager.yourPowerProgressBar.css(\"width\", yourPowerOnProgressBar + \"%\").attr(\"aria-valuenow\", yourPowerOnProgressBar);\r\n        this.gameManager.pageManager.enemyPowerProgressBar.css(\"width\", enemyPowerOnProgressBar + \"%\").attr(\"aria-valuenow\", enemyPowerOnProgressBar);\r\n    }\r\n\r\n    finishTheLeftAlive(yourPower, enemyPower) {\r\n        if (yourPower > enemyPower) {\r\n            $(\"#enemy-power-i\").text(0);\r\n\r\n            this.gameManager.pageManager.yourPowerProgressBar.css(\"width\", \"100%\").attr(\"aria-valuenow\", 100);\r\n            this.gameManager.pageManager.enemyPowerProgressBar.css(\"width\", \"0%\").attr(\"aria-valuenow\", 0);\r\n        } else {\r\n            this.gameManager.pageManager.yourPowerProgressBar.css(\"width\", \"0%\").attr(\"aria-valuenow\", 0);\r\n            this.gameManager.pageManager.enemyPowerProgressBar.css(\"width\", \"100%\").attr(\"aria-valuenow\", 100);\r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (WarManager);\n\n//# sourceURL=webpack:///./src/warManager.js?");

/***/ })

/******/ });